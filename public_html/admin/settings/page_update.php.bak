<?php
/**
 * Page-Specific Settings Update Form
 * Allows updating settings for individual pages rather than all settings at once
 */

// Include admin main file (includes config, functions, templates)
include_once '../assets/includes/main.php';

// Security check for admin/editor/developer access
if (!isset($_SESSION['admin_role']) || !in_array($_SESSION['admin_role'], ['Admin', 'Editor', 'Developer']))
{
    header('Location: ../index.php');
    exit();
}

// Get page parameter
$page_path = $_GET['page'] ?? '';
$page_name = $_GET['name'] ?? '';

if (empty($page_path)) {
    header('Location: settings_dash.php');
    exit;
}

// Define page-specific settings mapping
$page_settings_config = require_once 'page_settings_config.php';

// Get page configuration
$page_config = $page_settings_config[$page_path] ?? [
    'title' => 'Page Settings',
    'description' => 'Configure page-specific content and settings',
    'sections' => [
        'site' => [
            'title' => 'Site Information',
            'fields' => ['name']
        ]
    ],
    'priority' => 9
];

// Load current settings - handle both JSON and PHP settings
$settings_file = '../../../private/gws-universal-settings.json';
$current_settings = [];

// For about page, load from public_settings.php and image settings
if ($page_path === 'about.php') {
    include_once '../../assets/includes/settings/public_settings.php';
    include_once '../../assets/includes/settings/image_helper.php';
    
    $current_settings = [
        'about_content' => $about_content ?? [
            'title' => 'About Us',
            'text' => '',
            'side_text' => ''
        ],
        'about_image' => get_image_data('about') ?? [
            'path' => 'assets/img/about.jpg',
            'alt' => 'About Image'
        ]
    ];
} else {
    // For other pages, try to load from JSON
    if (file_exists($settings_file)) {
        $json_content = file_get_contents($settings_file);
        $current_settings = json_decode($json_content, true) ?? [];
    }
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'save_page_settings') {
    
    if ($page_path === 'about.php') {
        // Handle about page settings - update both public_settings.php and image settings
        $settings_file_path = '../../assets/includes/settings/public_settings.php';
        $image_settings_path = 'public_image_settings_config.php';
        
        // Get the new values from POST
        $new_title = trim(stripslashes($_POST['setting_about_content_title'] ?? ''));
        $new_text = trim(stripslashes($_POST['setting_about_content_text'] ?? ''));
        $new_side_text = trim($_POST['setting_about_content_side_text'] ?? ''); // Don't stripslashes for HTML content
        
        $new_image_path = trim(stripslashes($_POST['setting_about_image_path'] ?? ''));
        $new_image_alt = trim(stripslashes($_POST['setting_about_image_alt'] ?? ''));
        
        // Update public_settings.php
        $file_content = file_get_contents($settings_file_path);
        
        // Prepare the PHP code with proper escaping
        $title_escaped = var_export($new_title, true);
        $text_escaped = var_export($new_text, true);
        $side_text_escaped = var_export($new_side_text, true);
        
        // Update the about_content array in the file
        $updated_content = preg_replace(
            '/\$about_content\s*=\s*\[.*?\];/s',
            '$about_content = [
    \'title\' => ' . $title_escaped . ',
    \'text\' => ' . $text_escaped . ',
    \'side_text\' => ' . $side_text_escaped . '
];',
            $file_content
        );
        
        $settings_saved = file_put_contents($settings_file_path, $updated_content);
        
        // Update image settings
        $image_content = file_get_contents($image_settings_path);
        $path_escaped = var_export($new_image_path, true);
        $alt_escaped = var_export($new_image_alt, true);
        
        // Update the about image entry
        $updated_image_content = preg_replace(
            "/'about'\s*=>\s*\[.*?\]/s",
            "'about' => ['label' => 'About Image', 'path' => " . $path_escaped . ", 'is_video' => false, 'alt' => " . $alt_escaped . "]",
            $image_content
        );
        
        $images_saved = file_put_contents($image_settings_path, $updated_image_content);
        
        if ($settings_saved && $images_saved) {
            $success_message = "About page settings and image have been saved successfully!";
            
            // Reload settings to show updated values
            include_once '../../assets/includes/settings/public_settings.php';
            include_once '../../assets/includes/settings/image_helper.php';
            $current_settings = [
                'about_content' => $about_content,
                'about_image' => get_image_data('about')
            ];
        } else {
            $error_message = "Error saving settings. Please try again.";
        }
        
    } else {
        // Handle other page types with JSON
        $updated_settings = $current_settings;
        
        foreach ($_POST as $key => $value) {
            if (strpos($key, 'setting_') === 0) {
                $setting_path = substr($key, 8); // Remove 'setting_' prefix
                $path_parts = explode('_', $setting_path);
                
                // Only update settings for this page's sections
                $allowed_sections = array_keys($page_config['sections']);
                if (in_array($path_parts[0], $allowed_sections)) {
                    // Navigate through nested array structure
                    $current = &$updated_settings;
                    for ($i = 0; $i < count($path_parts) - 1; $i++) {
                        if (!isset($current[$path_parts[$i]])) {
                            $current[$path_parts[$i]] = [];
                        }
                        $current = &$current[$path_parts[$i]];
                    }
                    $current[$path_parts[count($path_parts) - 1]] = trim(stripslashes($value));
                }
            }
        }
        
        // Save updated settings to JSON
        if (file_put_contents($settings_file, json_encode($updated_settings, JSON_PRETTY_PRINT))) {
            $success_message = "Settings for " . htmlspecialchars($page_name) . " have been saved successfully!";
        } else {
            $error_message = "Error saving settings. Please try again.";
        }
    }
    
    // Update page completion status for any page type
    try {
        $stmt = $pdo->prepare('UPDATE page_completion_status SET last_checked = NOW() WHERE page_path = ?');
        $stmt->execute([$page_path]);
    } catch (Exception $e) {
        // Silent fail for database update
    }
}

// Get relevant settings for this page
function getPageSettings($settings, $page_config) {
    $page_settings = [];
    foreach ($page_config['sections'] as $section_name => $section_info) {
        if (isset($settings[$section_name])) {
            $page_settings[$section_name] = $settings[$section_name];
        }
    }
    return $page_settings;
}

$page_settings = getPageSettings($current_settings, $page_config);

?>
<?php echo template_admin_header($page_config['title']); ?>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0 text-gray-800">
                        <i class="fas fa-edit"></i>&nbsp;&nbsp;<?php echo $page_config['title']; ?>
                    </h1>
                    <p class="text-muted mb-0"><?php echo $page_config['description']; ?></p>
                    <small class="text-info">
                        <i class="fas fa-file"></i>&nbsp;&nbsp;Editing: <?php echo htmlspecialchars($page_path); ?>
                    </small>
                </div>
                <div class="d-flex gap-2">
                    <a href="../../<?php echo htmlspecialchars($page_path); ?>" target="_blank" class="btn btn-info btn-sm">
                        <i class="fas fa-external-link-alt"></i>&nbsp;&nbsp;Preview Page
                    </a>
                    <a href="settings_dash.php" class="btn btn-secondary btn-sm">
                        <i class="fas fa-arrow-left"></i>&nbsp;&nbsp;Back to Dashboard
                    </a>
                </div>
            </div>

            <!-- Success/Error Messages -->
            <?php if (isset($success_message)): ?>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle"></i>&nbsp;&nbsp;<?php echo $success_message; ?>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
            <?php endif; ?>

            <?php if (isset($error_message)): ?>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle"></i>&nbsp;&nbsp;<?php echo $error_message; ?>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
            <?php endif; ?>

            <!-- Page Settings Form -->
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-cogs"></i>&nbsp;&nbsp;Page-Specific Settings
                    </h6>
                </div>
                <div class="card-body">
                    
                    <form method="POST" id="pageSettingsForm">
                        <input type="hidden" name="action" value="save_page_settings">
                        
                        <?php if (empty($page_settings)): ?>
                        <div class="alert alert-warning">
                            <i class="fas fa-info-circle"></i>&nbsp;&nbsp;
                            <strong>No settings found for this page.</strong> 
                            This could mean:
                            <ul class="mb-0 mt-2">
                                <li>This page doesn't have configurable content yet</li>
                                <li>Settings haven't been created for this page type</li>
                                <li>The page uses only global site settings</li>
                            </ul>
                            <div class="mt-3">
                                <a href="settings_dash.php" class="btn btn-primary">
                                    <i class="fas fa-cogs"></i>&nbsp;&nbsp;Configure All Settings
                                </a>
                            </div>
                        </div>
                        <?php else: ?>
                        
                        <?php 
                        // Recursive function to render nested settings
                        function renderSettings($data, $prefix = '', $level = 0) {
                            $indent_class = $level > 0 ? 'ml-' . ($level * 3) : '';
                            
                            foreach ($data as $key => $value) {
                                $field_name = $prefix ? $prefix . '_' . $key : $key;
                                $field_id = 'setting_' . $field_name;
                                $field_display = ucwords(str_replace('_', ' ', $key));
                                
                                if (is_array($value)) {
                                    // Nested section
                                    echo '<div class="' . $indent_class . ' mb-3">';
                                    echo '<h6 class="text-secondary"><i class="fas fa-chevron-right"></i>&nbsp;&nbsp;' . $field_display . '</h6>';
                                    renderSettings($value, $field_name, $level + 1);
                                    echo '</div>';
                                } else {
                                    // Individual setting
                                    echo '<div class="form-group ' . $indent_class . ' mb-3">';
                                    echo '<label for="' . $field_id . '" class="form-label">' . $field_display . '</label>';
                                    
                                    if (strlen($value) > 100 || $field_name === 'side_text' || strpos($field_name, 'side_text') !== false) {
                                        // Large text gets textarea, side_text gets Summernote
                                        if ($field_name === 'side_text' || strpos($field_name, 'side_text') !== false) {
                                            echo '<textarea class="form-control summernote" id="' . $field_id . '" name="' . $field_id . '" rows="6">' . htmlspecialchars($value) . '</textarea>';
                                        } else {
                                            echo '<textarea class="form-control" id="' . $field_id . '" name="' . $field_id . '" rows="4">' . htmlspecialchars($value) . '</textarea>';
                                        }
                                    } else {
                                        // Short text gets input field
                                        echo '<input type="text" class="form-control" id="' . $field_id . '" name="' . $field_id . '" value="' . htmlspecialchars($value) . '">';
                                    }
                                    echo '</div>';
                                }
                            }
                        }
                        ?>
                        
                        <!-- Render settings by section -->
                        <?php foreach ($page_settings as $section_name => $section_data): ?>
                        <div class="mb-4">
                            <h5 class="text-primary border-bottom pb-2">
                                <i class="fas fa-folder"></i>&nbsp;&nbsp;<?php echo ucfirst($section_name); ?> Settings
                            </h5>
                            
                            <?php 
                            renderSettings($section_data, $section_name);
                            ?>
                        </div>
                        <?php endforeach; ?>
                        
                        <!-- Submit Button -->
                        <div class="row">
                            <div class="col-12">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save"></i>&nbsp;&nbsp;Save Page Settings
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary ml-2" onclick="resetForm()">
                                            <i class="fas fa-undo"></i>&nbsp;&nbsp;Reset Changes
                                        </button>
                                    </div>
                                    <div class="text-muted">
                                        <small>
                                            <i class="fas fa-info-circle"></i>&nbsp;&nbsp;
                                            Changes only affect: <?php echo htmlspecialchars($page_name); ?>
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <?php endif; ?>
                    </form>
                </div>
            </div>
            
            <!-- Quick Tips -->
            <div class="card shadow mt-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-success">
                        <i class="fas fa-lightbulb"></i>&nbsp;&nbsp;Quick Tips
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="text-primary">Best Practices:</h6>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-check text-success"></i> Test changes on the preview page first</li>
                                <li><i class="fas fa-check text-success"></i> Keep titles and descriptions concise</li>
                                <li><i class="fas fa-check text-success"></i> Use consistent styling across pages</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6 class="text-warning">Remember:</h6>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-info-circle text-info"></i> Changes are saved immediately</li>
                                <li><i class="fas fa-info-circle text-info"></i> Preview the page to see results</li>
                                <li><i class="fas fa-info-circle text-info"></i> Use the dashboard to track completion</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Form reset functionality
function resetForm() {
    if (confirm('Are you sure you want to reset all changes? This will lose any unsaved modifications.')) {
        document.getElementById('pageSettingsForm').reset();
    }
}

// Auto-save draft functionality (optional enhancement)
let autoSaveTimer;
function scheduleAutoSave() {
    clearTimeout(autoSaveTimer);
    autoSaveTimer = setTimeout(function() {
        // Could implement draft saving here
        console.log('Auto-save would trigger here');
    }, 30000); // 30 seconds
}

// Track form changes
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM Content Loaded');
    
    const form = document.getElementById('pageSettingsForm');
    if (form) {
        form.addEventListener('input', scheduleAutoSave);
    }
});
</script>

<?php echo template_admin_footer(); ?>

<script>
// Initialize Summernote after all admin scripts are loaded
$(document).ready(function() {
    // Force Summernote initialization with fallback
    setTimeout(function() {
        if (typeof $.fn.summernote !== 'undefined') {
            $('.summernote').each(function() {
                $(this).summernote({
                    height: 200,
                    focus: false,
                    toolbar: [
                        ['style', ['bold', 'italic', 'underline']],
                        ['font', ['strikethrough', 'superscript', 'subscript']],
                        ['fontsize', ['fontsize']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['height', ['height']],
                        ['insert', ['link', 'picture', 'table', 'hr']],
                        ['view', ['fullscreen', 'codeview']]
                    ],
                    placeholder: 'Enter rich text content here...',
                    callbacks: {
                        onChange: function(contents, $editable) {
                            if (typeof scheduleAutoSave === 'function') {
                                scheduleAutoSave();
                            }
                        }
                    }
                });
            });
        }
    }, 1000);
});
</script>
