<?php
/* 
 * Content Settings Management
 * 
 * SYSTEM: GWS Universal Hybrid App - Admin Panel
 * FILE: content_settings.php
 * LOCATION: /public_html/admin/settings/
 * PURPOSE: Unified content management system with tabbed interface
 * DETAILED DESCRIPTION:
 * This file provides a unified interface for managing content settings across the application.
 * It allows administrators to configure settings for different content areas, including
 * general site settings, homepage content, modular sections, media assets, and individual pages.
 * The tabbed interface enhances usability by organizing settings into distinct categories.
 * REQUIRED FILES: 
 * - /public_html/assets/includes/settings/home_content_settings.php
 * - /public_html/assets/includes/settings/sections_content_settings.php
 * - /public_html/assets/includes/settings/media_content_settings.php
 * - /public_html/assets/includes/settings/pages_content_settings.php
 * CREATED: 2025-08-07
 * UPDATED: 2025-08-07
 * VERSION: 1.0
 * PRODUCTION: [IN DEVELOPMENT]
 * 
 * TODO (Next Release Refactor):
 *   Split this unified interface into modular pages for clarity and faster testing:
 *     - settings_content_home.php      (Home hero, about, mission, etc.)
 *     - settings_content_sections.php (Services, features blocks)
 *     - settings_content_media.php    (Image/video asset management with deterministic filenames)
 *     - settings_content_pages.php    (Static page copy + meta; possibly dynamic ?page= param)
 *   Shared helper library: content_settings_lib.php (load/save, file validation, image processing)
 *   Goals: Smaller forms, reduced cognitive load, per-area permissions later, consistent tab style (reuse blog form styling).
 *   Image Handling Plan: Hardcode canonical target paths; on upload validate MIME + size, auto-resize/compress, allow choose-existing modal.
 *   Backward Compatibility: Keep content_settings.php as a temporary router/legacy wrapper for one release before removal.
 *   See CONTENT_SETTINGS_REFACTOR_PLAN.md for full details.
 * 
 * FEATURES:
 * - Unified tabbed interface for all content settings
 * - General tab (site-wide content)
 * - Home Page tab (homepage specific content)
 * - Sections tab (modular content sections)
 * - Media tab (image and video management)
 * - Pages tab (page-specific content)
 */

include_once '../assets/includes/main.php';

// Legacy file-based settings removed. All content now sourced from database tables.
// Initialize placeholders for any arrays referenced later to avoid notices.
$settings = [
    'home' => [],
    'sections' => [],
    'media' => [],
    'pages' => []
];

// Process form submission (either dedicated image upload or full content save)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $messages = [];
    $success = true;
    $is_upload_only = (isset($_POST['action']) && $_POST['action'] === 'upload_hero_image');

    // Handle generic file uploads first (exclude dedicated hero image field to avoid double move)
    if (!empty($_FILES)) {
        foreach ($_FILES as $file_key => $file) {
            if ($file_key === 'home_hero_image') { continue; }
            if ($file['error'] === UPLOAD_ERR_OK) {
                $temp_name = $file['tmp_name'];
                $target_path = PROJECT_ROOT . '/public_html/assets/img/' . basename($file['name']);
                if (move_uploaded_file($temp_name, $target_path)) {
                    $messages[] = "File " . basename($file['name']) . " uploaded successfully.";
                    $section = explode('_', $file_key)[0];
                    $settings[$section][$file_key] = 'assets/img/' . basename($file['name']);
                } else {
                    $success = false;
                    $messages[] = "Error uploading " . basename($file['name']);
                }
            }
        }
    }

    // Capture hero fields (posted under home[]) unless this is upload-only action
    $posted_hero = $is_upload_only ? [] : ($_POST['home'] ?? []);
    // Load existing hero row so we don't overwrite with null when a field is omitted
    $existingHero = [];
    if ($pdo) {
        try { $existingHero = $pdo->query("SELECT hero_headline, hero_subheadline, hero_background_image, hero_button_text, hero_button_link FROM setting_content_homepage LIMIT 1")->fetch(PDO::FETCH_ASSOC) ?: []; } catch(Exception $e) { $existingHero = []; }
    }
    $hero_headline_p    = $is_upload_only ? ($existingHero['hero_headline'] ?? null) : (array_key_exists('hero_headline', $posted_hero)   ? trim($posted_hero['hero_headline'])   : ($existingHero['hero_headline']   ?? null));
    $hero_subheadline_p = $is_upload_only ? ($existingHero['hero_subheadline'] ?? null) : (array_key_exists('hero_subheadline', $posted_hero)? trim($posted_hero['hero_subheadline']): ($existingHero['hero_subheadline']?? null));
    $hero_button_text_p = $is_upload_only ? ($existingHero['hero_button_text'] ?? null) : (array_key_exists('hero_button_text', $posted_hero)? trim($posted_hero['hero_button_text']): ($existingHero['hero_button_text']?? null));
    // Hero button link feature deferred: preserve existing value
    $hero_button_link_p = $existingHero['hero_button_link'] ?? null;
    $hero_image_select_p= $is_upload_only ? ($existingHero['hero_background_image'] ?? null) : (array_key_exists('hero_image', $posted_hero)      ? trim($posted_hero['hero_image'])      : ($existingHero['hero_background_image'] ?? null));
    // Interpret special NONE value or empty selection to clear background image (only on full form submit)
    if(!$is_upload_only && ($hero_image_select_p === 'NONE')) {
        $hero_image_select_p = '';
    }

    // If a new hero image was uploaded (home_hero_image), move it to hero-uploads and prefer it
    // Unified hero image file field name for both forms
    if (!empty($_FILES['home_hero_image'])) {
        $upload = $_FILES['home_hero_image'];
        if ($upload['error'] === UPLOAD_ERR_OK) {
            // Enforce max size 2MB
            $maxBytes = 2 * 1024 * 1024;
            if ($upload['size'] > $maxBytes) {
                $messages[] = 'Hero image too large (>' . round($maxBytes/1024/1024,2) . 'MB).';
                $success = false;
            } else {
                $ext = strtolower(pathinfo($upload['name'], PATHINFO_EXTENSION));
                if (preg_match('/^(jpe?g|png|webp)$/', $ext)) {
                    $destDir = PROJECT_ROOT . '/public_html/assets/img/hero-uploads/';
                    if (!is_dir($destDir)) {
                        if (!@mkdir($destDir, 0755, true)) {
                            $messages[] = 'Failed to create hero-uploads directory.';
                            $success = false;
                        }
                    }
                    if (is_dir($destDir) && is_writable($destDir)) {
                        $safeName = 'hero_' . date('Ymd_His') . '_' . preg_replace('/[^a-zA-Z0-9_\.-]/','', $upload['name']);
                        $destPath = $destDir . $safeName;
                        // Auto-resize + center-crop to standard hero size (1920x1080) before saving
                        $targetW = 1920; $targetH = 1080; // standard dimensions
                        $srcTmp = $upload['tmp_name'];
                        $didProcess = false;
                        if(function_exists('imagecreatetruecolor')){
                            $imgInfo = @getimagesize($srcTmp);
                            if($imgInfo){
                                $srcW = $imgInfo[0]; $srcH = $imgInfo[1]; $mime = $imgInfo['mime'] ?? '';
                                $createFn = null; $saveFn = null; $transparency = false; $quality = 82; // jpeg/webp quality
                                switch($mime){
                                    case 'image/jpeg': $createFn = 'imagecreatefromjpeg'; $saveFn = 'imagejpeg'; break;
                                    case 'image/png':  $createFn = 'imagecreatefrompng';  $saveFn = 'imagepng'; $transparency = true; break;
                                    case 'image/webp': if(function_exists('imagecreatefromwebp') && function_exists('imagewebp')){ $createFn = 'imagecreatefromwebp'; $saveFn = 'imagewebp'; $transparency = true; } break;
                                }
                                if($createFn && $saveFn && function_exists($createFn) && function_exists($saveFn)){
                                    $srcImg = @$createFn($srcTmp);
                                    if($srcImg){
                                        // Cover fit: scale so both dimensions >= target, then center crop
                                        $scale = max($targetW / $srcW, $targetH / $srcH);
                                        $interW = (int)round($srcW * $scale);
                                        $interH = (int)round($srcH * $scale);
                                        $intermediate = imagecreatetruecolor($interW, $interH);
                                        if($transparency){
                                            imagealphablending($intermediate, false); imagesavealpha($intermediate, true);
                                            $clear = imagecolorallocatealpha($intermediate, 0,0,0,127); imagefilledrectangle($intermediate,0,0,$interW,$interH,$clear);
                                        }
                                        imagecopyresampled($intermediate, $srcImg, 0,0,0,0, $interW,$interH, $srcW,$srcH);
                                        imagedestroy($srcImg);
                                        $destImg = imagecreatetruecolor($targetW, $targetH);
                                        if($transparency){
                                            imagealphablending($destImg, false); imagesavealpha($destImg, true);
                                            $clear2 = imagecolorallocatealpha($destImg, 0,0,0,127); imagefilledrectangle($destImg,0,0,$targetW,$targetH,$clear2);
                                        }
                                        $cropX = (int)max(0, ($interW - $targetW)/2);
                                        $cropY = (int)max(0, ($interH - $targetH)/2);
                                        imagecopy($destImg, $intermediate, 0,0, $cropX,$cropY, $targetW,$targetH);
                                        imagedestroy($intermediate);
                                        $saved = false;
                                        if($saveFn === 'imagejpeg'){
                                            $saved = @$saveFn($destImg, $destPath, $quality);
                                        } elseif($saveFn === 'imagepng'){
                                            // PNG compression: 0 (no) to 9 (max); choose 6 moderate
                                            $saved = @$saveFn($destImg, $destPath, 6);
                                        } elseif($saveFn === 'imagewebp'){
                                            $saved = @$saveFn($destImg, $destPath, $quality);
                                        }
                                        imagedestroy($destImg);
                                        if($saved){
                                            $didProcess = true;
                                        }
                                    }
                                }
                            }
                        }
                        if(!$didProcess){
                            // Fallback: just move original file
                            if(!move_uploaded_file($upload['tmp_name'], $destPath)){
                                $messages[] = 'Failed moving hero image to destination (permission or temp issue).';
                                $success = false;
                            }
                        }
                        if($success !== false){
                            $hero_image_select_p = 'assets/img/hero-uploads/' . $safeName; // relative path stored
                            $messages[] = 'Hero image uploaded & standardized to 1920x1080.';
                        }
                    } else if(is_dir($destDir)) {
                        $messages[] = 'Destination directory not writable: ' . htmlspecialchars($destDir);
                        $success = false;
                    }
                } else {
                    $messages[] = 'Invalid hero image format. Allowed: JPG, PNG, WEBP.';
                    $success = false;
                }
            }
        } elseif ($upload['error'] !== UPLOAD_ERR_NO_FILE) {
            // Map common PHP upload errors
            $errMap = [
                UPLOAD_ERR_INI_SIZE => 'File exceeds upload_max_filesize in php.ini.',
                UPLOAD_ERR_FORM_SIZE => 'File exceeds MAX_FILE_SIZE directive in form.',
                UPLOAD_ERR_PARTIAL => 'File only partially uploaded.',
                UPLOAD_ERR_NO_TMP_DIR => 'Missing temporary folder on server.',
                UPLOAD_ERR_CANT_WRITE => 'Failed to write file to disk.',
                UPLOAD_ERR_EXTENSION => 'A PHP extension stopped the file upload.'
            ];
            $messages[] = 'Hero image upload error: ' . ($errMap[$upload['error']] ?? ('Code ' . $upload['error']));
            $success = false;
        }
    }

    // Persist hero fields to DB
    if ($is_upload_only && $pdo) {
        // Only update hero_background_image if a new one was uploaded
        if (!empty($hero_image_select_p)) {
            try {
                $exists = $pdo->query("SELECT id FROM setting_content_homepage LIMIT 1")->fetch(PDO::FETCH_ASSOC);
                if ($exists) {
                    $stmt = $pdo->prepare("UPDATE setting_content_homepage SET hero_background_image = :img, updated_at = NOW()");
                    $stmt->execute([':img' => $hero_image_select_p]);
                } else {
                    $stmt = $pdo->prepare("INSERT INTO setting_content_homepage (hero_headline, hero_subheadline, hero_background_image, hero_button_text, hero_button_link, created_at, updated_at) VALUES ('', '', :img, '', '', NOW(), NOW())");
                    $stmt->execute([':img' => $hero_image_select_p]);
                }
            } catch(Exception $e) {
                $messages[] = 'DB error saving uploaded hero image: ' . htmlspecialchars($e->getMessage());
                $success = false;
            }
        }
    } elseif (!$is_upload_only && $pdo) {
        try {
            // Check if row exists
            $exists = $pdo->query("SELECT id FROM setting_content_homepage LIMIT 1")->fetch(PDO::FETCH_ASSOC);
            if ($exists) {
                $sql = "UPDATE setting_content_homepage
                        SET hero_headline = :hero_headline,
                            hero_subheadline = :hero_subheadline,
                            hero_background_image = :hero_background_image,
                            hero_button_text = :hero_button_text,
                            hero_button_link = :hero_button_link,
                            updated_at = NOW()";
                $stmtHero = $pdo->prepare($sql);
            } else {
                $sql = "INSERT INTO setting_content_homepage
                        (hero_headline, hero_subheadline, hero_background_image, hero_button_text, hero_button_link, created_at, updated_at)
                        VALUES (:hero_headline, :hero_subheadline, :hero_background_image, :hero_button_text, :hero_button_link, NOW(), NOW())";
                $stmtHero = $pdo->prepare($sql);
            }
            $stmtHero->execute([
                ':hero_headline' => $hero_headline_p,
                ':hero_subheadline' => $hero_subheadline_p,
                ':hero_background_image' => $hero_image_select_p,
                ':hero_button_text' => $hero_button_text_p,
                ':hero_button_link' => $hero_button_link_p,
            ]);
        } catch (Exception $e) {
            $messages[] = 'DB error saving hero fields: ' . htmlspecialchars($e->getMessage());
            $success = false;
        }
    } elseif(!$is_upload_only) {
        $messages[] = 'Database connection not available for hero fields.';
        $success = false;
    }

    // ----- SERVICES (Sections Tab) -----
    if(!$is_upload_only && $pdo) {
        // Expect array: services[id][title|body|icon] plus section intro fields
        $servicesPosted = $_POST['services'] ?? [];
        $servicesSectionTitle = trim($_POST['services_section_title'] ?? '');
        $servicesSectionParagraph = trim($_POST['services_section_paragraph'] ?? '');
        try {
            if(!empty($servicesPosted)) {
                $stmtS = $pdo->prepare("UPDATE content_items SET title = :title, body = :body, icon = :icon, updated_at = NOW() WHERE id = :id AND area='service'");
                foreach($servicesPosted as $sid => $vals) {
                    $title = trim($vals['title'] ?? '');
                    $body  = trim($vals['body'] ?? '');
                    $icon  = trim($vals['icon'] ?? '');
                    if(is_numeric($sid)) {
                        $stmtS->execute([':title'=>$title, ':body'=>$body, ':icon'=>$icon, ':id'=>$sid]);
                    }
                }
            }
            // Upsert services section meta (area='section', slug='services') even if blank to allow clearing
            $stmtMeta = $pdo->prepare("INSERT INTO content_items (area, slug, title, body, position, active, created_at, updated_at) VALUES ('section','services',:title,:body,0,1,NOW(),NOW()) ON DUPLICATE KEY UPDATE title=VALUES(title), body=VALUES(body), updated_at=NOW()");
            $stmtMeta->execute([':title'=>$servicesSectionTitle, ':body'=>$servicesSectionParagraph]);
        } catch(Exception $e) {
            $messages[] = 'DB error updating services: '.htmlspecialchars($e->getMessage());
            $success = false;
        }
    }

    // Legacy file-based persistence removed; nothing else to process here.

    // Add alert message & redirect (PRG) to avoid resubmission prompt
    if(session_status()!==PHP_SESSION_ACTIVE) { @session_start(); }
    if ($success) {
        $_SESSION['content_settings_flash'] = '<div class="alert alert-success alert-dismissible fade show" role="alert">'
            . '<i class="bi bi-check-circle-fill me-2"></i>' . ($is_upload_only ? 'Hero image uploaded.' : 'Content settings saved successfully.')
            . '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>'
            . '</div>';
    } else {
        $_SESSION['content_settings_flash'] = '<div class="alert alert-danger alert-dismissible fade show" role="alert">'
            . '<i class="bi bi-exclamation-octagon-fill me-2"></i>' . ($is_upload_only ? 'Hero image upload error.' : 'Error saving some settings. Please check the messages below.')
            . '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>'
            . '</div>';
    }
    $activeTab = isset($_POST['active_tab']) ? preg_replace('/[^a-z0-9_-]/i','', $_POST['active_tab']) : 'home';
    header('Location: content_settings.php#' . $activeTab);
    exit;
}

?>
<?= template_admin_header('Content Settings', 'settings', 'content') ?>
<div class="flash-messages container mt-3">
    <?php if(session_status()!==PHP_SESSION_ACTIVE) { @session_start(); } 
    if(!empty($_SESSION['content_settings_flash'])) { echo $_SESSION['content_settings_flash']; unset($_SESSION['content_settings_flash']); } ?>
</div>
 
<?php
// Load image settings configuration
include_once 'public_image_settings_config.php';
?>
 
<div class="content-title">
    <div class="title">
        <div class="icon">
            <i class="bi bi-pencil-square"></i>
        </div>
        <div class="txt">
            <h2>Content Settings</h2>
            <p>Manage website content and media</p>
        </div>
    </div>
</div>

    <!-- Hero upload moved into Home tab -->

    <form action="" method="post" id="contentSettingsForm" class="needs-validation" enctype="multipart/form-data" novalidate>
        <input type="hidden" name="active_tab" id="active_tab_input" value="home">
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <div class="content-header form-actions-header mb-2">
                    <div class="form-actions">
                        <a href="settings_dash.php" class="btn btn-outline-secondary" aria-label="Cancel and return to settings dashboard">
                            <i class="bi bi-arrow-left" aria-hidden="true"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-success" aria-label="Save content changes">
                            <i class="bi bi-save me-2"></i>Save Content
                        </button>
                    </div>
                </div>
                <div class="tab-nav" role="tablist" aria-label="Content settings tabs">
                    <button type="button" class="tab-btn active" id="home-tab-btn" aria-controls="home-tab" aria-selected="true" role="tab" data-tab-target="home-tab">
                        <i class="bi bi-house"></i> Hero
                    </button>
                    <button type="button" class="tab-btn" id="sections-tab-btn" aria-controls="sections-tab" aria-selected="false" role="tab" data-tab-target="sections-tab">
                        <i class="bi bi-grid"></i> Services
                    </button>
                    <button type="button" class="tab-btn" id="clients-tab-btn" aria-controls="clients-tab" aria-selected="false" role="tab" data-tab-target="clients-tab">
                        <i class="bi bi-people"></i> Clients
                    </button>
                    <button type="button" class="tab-btn" id="pages-tab-btn" aria-controls="pages-tab" aria-selected="false" role="tab" data-tab-target="pages-tab">
                        <i class="bi bi-file-earmark-text"></i> Pages
                    </button>
                </div>
            </div>
            
            <div class="card-body p-0">
                <!-- Home Tab -->
                <div id="home-tab" class="tab-content active" role="tabpanel" aria-labelledby="home-tab-btn">
                        <?php
                        // Prepare hero upload directory status (moved form)
                        $hero_dir_fs = PROJECT_ROOT . '/public_html/assets/img/hero-uploads/';
                        $hero_dir_writable = is_dir($hero_dir_fs) ? is_writable($hero_dir_fs) : (@mkdir($hero_dir_fs,0755,true) && is_writable($hero_dir_fs));
                        ?>
                        <form action="" method="post" class="mb-5" enctype="multipart/form-data" id="heroUploadOnlyForm" onsubmit="document.getElementById('active_tab_input').value='home';">
                            <input type="hidden" name="action" value="upload_hero_image">
                            <div class="card border-secondary-subtle">
                                <div class="card-body py-3 px-4">
                                    <div class="row g-3 align-items-center">
                                        <div class="col-md-4">
                                            <label class="form-label fw-bold mb-1" for="heroUploadInput">Upload Hero Image</label>
                                            <input type="file" name="home_hero_image" id="heroUploadInput" class="form-control" accept="image/jpeg,image/png,image/webp" <?= $hero_dir_writable? '':'disabled' ?>>
                                        </div>
                                        <div class="col-md-3 d-flex gap-2">
                                            <button type="submit" class="btn btn-outline-primary" id="heroUploadBtn" <?= $hero_dir_writable? '':'disabled' ?>><i class="bi bi-upload me-1"></i>Upload Image</button>
                                        </div>
                                        <div class="col-md-5">
                                            <div class="hero-note small p-3 rounded" style="background:#f1f5f9;border:1px solid #d0d7de;">
                                                <strong>Hero Image Guidelines:</strong><br>
                                                Ideal size: <code>1920x1080</code> (16:9). Max 2MB. JPG, PNG, WEBP.<br>
                                                Keep file names descriptive; avoid spaces.
                                                <?php if(!$hero_dir_writable): ?>
                                                    <div class="text-danger mt-2"><i class="bi bi-shield-exclamation me-1"></i>Directory not writable: /assets/img/hero-uploads/</div>
                                                <?php endif; ?>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <?php
                        // --- Fetch hero values from DB ---
                        $pdo = $pdo ?? null;
                        $hero_headline = $hero_subheadline = $hero_button_text = $hero_button_link = $hero_image = '';
                        if ($pdo) {
                            $stmt = $pdo->query("SELECT hero_headline, hero_subheadline, hero_background_image, hero_button_text, hero_button_link FROM setting_content_homepage LIMIT 1");
                            if ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                                $hero_headline = $row['hero_headline'] ?? '';
                                $hero_subheadline = $row['hero_subheadline'] ?? '';
                                $hero_image = $row['hero_background_image'] ?? '';
                                $hero_button_text = $row['hero_button_text'] ?? '';
                                $hero_button_link = $row['hero_button_link'] ?? '';
                            }
                        }
                        ?>
                        <!-- Duplicate upload field removed (handled by standalone upload form) -->
                        <!-- HERO GROUP -->
                        <div class="row mb-2 mt-4">
                            <div class="col-md-6 mb-3">
                                <label for="home_hero_headline" class="form-label mt-2 fw-bold">Hero Headline</label>
                                <input type="text" name="home[hero_headline]" id="home_hero_headline" class="form-control" value="<?= htmlspecialchars($hero_headline) ?>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="home_hero_subheadline" class="form-label fw-bold">Hero Subheadline</label>
                                <input type="text" name="home[hero_subheadline]" id="home_hero_subheadline" class="form-control" value="<?= htmlspecialchars($hero_subheadline) ?>">
                            </div>
                        </div>
                        <div class="border-top" style="border-top:1px solid #dee2e6 !important;margin: .25rem 0 1.25rem 0;"></div>
                        <div class="row mb-4 pb-2 border-bottom">
                            <div class="col-12 mb-3">
                                <label class="form-label fw-bold">Hero Background Image</label>
                                <div class="d-flex justify-content-between align-items-center mb-1">
                                    <div class="small text-muted">Select a hero background image:</div>
                                    <button type="button" class="btn btn-sm btn-danger" id="heroRemoveBtn"><i class="bi bi-trash me-1"></i>Delete Selected Image</button>
                                </div>
                                <div class="hero-image-grid" id="heroImageGrid">
                                    <?php
                                    $debugHero = isset($_GET['debug']) && $_GET['debug'] === 'hero';
                                    $hero_dir = PROJECT_ROOT . '/public_html/assets/img/hero-uploads/';
                                    $has_images = false;
                                    $relativePrefix = '../../'; // two directories up from /admin/settings/ -> /public_html/
                                    // First option: No Background Image
                                    $noneChecked = ($hero_image === '' || $hero_image === null);
                                    echo '<label class="hero-thumb none-option'.($noneChecked? ' selected':'').'" data-file="" title="No background image">';
                                    echo '<input type="radio" name="home[hero_image]" value="" '.($noneChecked? 'checked':'').'>'; 
                                    // Inline styled placeholder (original behavior resilience)
                                    echo '<div style="height:80px;display:flex;align-items:center;justify-content:center;border:2px dashed #ced4da;border-radius:6px;font-size:11px;color:#6c757d;background:#fafbfc;margin-bottom:4px;">No Bg Image</div>';
                                    // Name removed per request; keep only meta (dimensions placeholder stays blank here)
                                    echo '<span class="meta">&nbsp;</span>';
                                    echo '</label>';
                                    if (is_dir($hero_dir)) {
                                        $files = array_values(array_filter(scandir($hero_dir), function($f) use ($hero_dir) {
                                            return !is_dir($hero_dir . $f) && preg_match('/\.(jpe?g|png|webp)$/i', $f);
                                        }));
                                        foreach ($files as $file) {
                                            $rel = 'assets/img/hero-uploads/' . $file; // stored relative path
                                            $checked = ($hero_image === $rel) ? 'checked' : '';
                                            $abs_fs = $hero_dir . $file;
                                            $exists = file_exists($abs_fs);
                                            $src_url = $relativePrefix . $rel; // relative path for admin context
                                            $alt_url = '/' . $rel; // root-assumed alternative
                                            $dim = @getimagesize($abs_fs);
                                            $size_kb = @filesize($abs_fs);
                                            $meta_txt = '';
                                            if($dim && $size_kb){
                                                $meta_txt = $dim[0].'x'.$dim[1].' • '.round($size_kb/1024).' KB';
                                            } elseif($dim){
                                                $meta_txt = $dim[0].'x'.$dim[1];
                                            }
                                            echo '<label class="hero-thumb'.($checked? ' selected':'').'" data-file="'.htmlspecialchars($rel).'">';
                                            echo '<input type="radio" name="home[hero_image]" value="'.htmlspecialchars($rel).'" '.$checked.'>'; 
                                            echo '<img src="'.htmlspecialchars($src_url).'" alt="'.htmlspecialchars($file).'" style="width:100%;height:80px;object-fit:cover;border-radius:6px;display:block;margin-bottom:4px;"'.($debugHero ? ' data-alt="'.htmlspecialchars($alt_url).'" data-exists="'.($exists? '1':'0').'"' : '').'>';
                                            // File name display removed per request; only showing dimensions/size meta below
                                            if($meta_txt) echo '<span class="meta">'.htmlspecialchars($meta_txt).'</span>';
                                            if($debugHero){
                                                $status = $exists ? 'OK' : 'MISS';
                                                echo '<div class="hero-debug"><strong>'.$status.'</strong> FS: '.htmlspecialchars(str_replace(PROJECT_ROOT,'',$abs_fs)).'<br><span class="text-info">REL:</span> '.htmlspecialchars($src_url).'<br><span class="text-info">ROOT:</span> '.htmlspecialchars($alt_url).'</div>';
                                            }
                                            echo '</label>';
                                            $has_images = true;
                                        }
                                    }
                                    if(!$has_images) {
                                        echo '<div class="small text-muted">No images uploaded yet. Use the Upload Hero Image form above.</div>';
                                    }
                                    if($debugHero){
                                        echo '<div class="alert alert-warning small mt-2">Hero Debug Mode Active. Showing file existence and URL variants.</div>';
                                        echo '<style>.hero-thumb{position:relative}.hero-thumb .hero-debug{position:absolute;left:0;right:0;bottom:0;background:rgba(0,0,0,.68);color:#fff;font-size:10px;line-height:1.15;padding:3px 4px;max-height:75%;overflow:auto;font-family:monospace}</style>';
                                    }
                                    ?>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label for="home_hero_button_text" class="form-label fw-bold">Hero Button Text</label>
                                <input type="text" name="home[hero_button_text]" id="home_hero_button_text" class="form-control" value="<?= htmlspecialchars($hero_button_text) ?>">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="home_hero_button_link" class="form-label fw-bold">Hero Button Link <span class="badge bg-secondary">Coming Soon</span></label>
                                <input type="text" id="home_hero_button_link" class="form-control" value="<?= htmlspecialchars($hero_button_link) ?>" readonly disabled aria-disabled="true" placeholder="Feature disabled">
                                <div class="form-text">Link management will be available in a future update.</div>
                            </div>
                        </div>
                </div>

                <!-- Sections Tab -->
                <div id="sections-tab" class="tab-content" role="tabpanel" aria-labelledby="sections-tab-btn">
                    <?php
                    $services = [];
                    $servicesSectionTitle = $servicesSectionParagraph = '';
                    if($pdo){
                        try {
                            $stmtS = $pdo->query("SELECT id, area, slug, title, body, icon, position, active FROM content_items WHERE area IN('service','section') ORDER BY FIELD(area,'section','service'), position, id");
                            while($r = $stmtS->fetch(PDO::FETCH_ASSOC)){
                                if($r['area']==='service') { $services[]=$r; }
                                elseif($r['area']==='section' && $r['slug']==='services') {
                                    $servicesSectionTitle = $r['title'] ?? '';
                                    $servicesSectionParagraph = $r['body'] ?? '';
                                }
                            }
                        } catch(Exception $e) { /* swallow */ }
                    }
                    ?>
                    <div class="row" id="servicesCardsRow">
                        <div class="col-12 mb-3 d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center gap-3">
                                <h3 class="mb-0">Services</h3>
                                <span class="text-muted small">Stored in content_items (area = service)</span>
                            </div>
                            <div class="d-flex gap-2">
                                <!-- Add Service button temporarily disabled
                                <button type="button" class="btn btn-sm btn-primary" id="addServiceBtn"><i class="bi bi-plus-lg"></i> Add Service</button>
                                -->
                            </div>
                        </div>
                        <div class="col-12 mb-3">
                            <div class="card border-secondary-subtle">
                                <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
                                    <h4 class="mb-0">Services Intro</h4>
                                    <div class="d-flex align-items-center gap-2">
                                        <span class="service-intro-status small text-muted" aria-live="polite"></span>
                                        <button type="button" class="btn btn-success btn-sm" id="servicesIntroSaveBtn">
                                            <i class="bi bi-save me-1"></i> Save Intro
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body p-4">
                                    <div class="row g-3">
                                        <div class="col-md-4">
                                            <label class="form-label fw-bold">Services Section Title</label>
                                            <input type="text" class="form-control" name="services_section_title" value="<?= htmlspecialchars($servicesSectionTitle) ?>" placeholder="Section heading">
                                        </div>
                                        <div class="col-md-8">
                                            <label class="form-label fw-bold">Services Section Paragraph</label>
                                            <textarea class="form-control" name="services_section_paragraph" rows="2" placeholder="Intro summary paragraph"><?= htmlspecialchars($servicesSectionParagraph) ?></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <?php if(empty($services)): ?>
                            <div class="col-12"><div class="alert alert-warning small">No service records found. Run schema seed script.</div></div>
                        <?php endif; ?>
                        <div class="col-12">
                            <div class="accordion" id="servicesAccordion">
                                <?php $svcIndex=0; foreach($services as $s): $svcIndex++; $accId = 'svc'.$s['id']; ?>
                                <div class="accordion-item service-card-wrapper" data-service-id="<?= (int)$s['id'] ?>">
                                    <h2 class="accordion-header" id="heading-<?= $accId ?>">
                                        <button class="accordion-button collapsed d-flex justify-content-between align-items-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-<?= $accId ?>" aria-expanded="false" aria-controls="collapse-<?= $accId ?>">
                                            <span class="me-3 text-truncate">Service <?= htmlspecialchars($s['slug']) ?> <small class="text-muted">(#<?= (int)$s['id'] ?> Pos <?= (int)$s['position'] ?>)</small></span>
                                            <span class="badge bg-secondary ms-auto">Edit</span>
                                        </button>
                                    </h2>
                                    <div id="collapse-<?= $accId ?>" class="accordion-collapse collapse" aria-labelledby="heading-<?= $accId ?>" data-bs-parent="#servicesAccordion">
                                        <div class="accordion-body">
                                            <div class="d-flex justify-content-end gap-2 mb-3 flex-wrap">
                                                <span class="service-save-status small text-muted" aria-live="polite"></span>
                                                <button type="button" class="btn btn-sm btn-success service-save-btn" onclick="document.getElementById('active_tab_input').value='sections';"><i class="bi bi-save me-1"></i> Save Service</button>
                                                <button type="button" class="btn btn-sm btn-outline-danger service-delete-btn" title="Delete Service"><i class="bi bi-trash"></i></button>
                                            </div>
                                            <div class="row g-3">
                                                <div class="col-md-4">
                                                    <label class="form-label fw-bold">Title</label>
                                                    <input type="text" name="services[<?= (int)$s['id'] ?>][title]" class="form-control service-title" value="<?= htmlspecialchars($s['title'] ?? '') ?>" autocomplete="off">
                                                </div>
                                                <div class="col-md-4">
                                                    <label class="form-label fw-bold">Icon (HTML or class)</label>
                                                    <input type="text" name="services[<?= (int)$s['id'] ?>][icon]" class="form-control service-icon" value="<?= htmlspecialchars($s['icon'] ?? '') ?>" placeholder='<i class="bi bi-gear"></i>' autocomplete="off">
                                                    <div class="form-text">Raw HTML or class name.</div>
                                                </div>
                                                <div class="col-md-4">
                                                    <label class="form-label fw-bold">(Future) Image Upload</label>
                                                    <div class="border rounded p-2 bg-light text-muted small">Placeholder</div>
                                                </div>
                                                <div class="col-12">
                                                    <label class="form-label fw-bold">Description</label>
                                                    <textarea name="services[<?= (int)$s['id'] ?>][body]" class="form-control summernote service-body" rows="4"><?= htmlspecialchars($s['body'] ?? '') ?></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <?php endforeach; ?>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Clients Tab -->
                <div id="clients-tab" class="tab-content" role="tabpanel" aria-labelledby="clients-tab-btn">
                    <div class="row">
                        <div class="col-12 mb-3 d-flex justify-content-between align-items-center">
                            <h3 class="mb-0">Clients</h3>
                            <span class="text-muted small">Logos & testimonials (upcoming)</span>
                        </div>
                        <div class="col-12">
                            <div class="accordion" id="clientsAccordion">
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="client-logos-heading">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#client-logos" aria-expanded="true" aria-controls="client-logos">Client Logos</button>
                                    </h2>
                                    <div id="client-logos" class="accordion-collapse collapse show" aria-labelledby="client-logos-heading" data-bs-parent="#clientsAccordion">
                                        <div class="accordion-body">
                                            <div class="alert alert-info small mb-3">Future feature: upload, reorder, activate/deactivate logos with per-item save.</div>
                                            <ul class="list-unstyled mb-0" id="clientLogoList"><li class="text-muted">(No logos yet)</li></ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="client-testimonials-heading">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#client-testimonials" aria-expanded="false" aria-controls="client-testimonials">Testimonials</button>
                                    </h2>
                                    <div id="client-testimonials" class="accordion-collapse collapse" aria-labelledby="client-testimonials-heading" data-bs-parent="#clientsAccordion">
                                        <div class="accordion-body">
                                            <div class="alert alert-info small mb-0">Future feature: testimonial CRUD interface.</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Pages Tab -->
                <div id="pages-tab" class="tab-content" role="tabpanel" aria-labelledby="pages-tab-btn">
                    <?php
                        // Pages configuration (static list for now). When moving to DB, maintain exclusion logic.
                        $pages = [
                            'about' => 'About Us',
                            'services' => 'Services',
                            'portfolio' => 'Portfolio',
                            'contact' => 'Contact',
                            'privacy' => 'Privacy Policy',
                            'terms' => 'Terms of Service'
                        ];
                        // NOTE: Accessibility page intentionally excluded from editing per business/legal requirement.
                        // Load structured page payloads (JSON) + metadata if repository available
                        $page_payloads = [];
                        if(isset($pdo)) {
                            include_once __DIR__ . '/../assets/includes/content_repository.php';
                            foreach(array_keys($pages) as $slugTmp){
                                $page_payloads[$slugTmp] = pages_get_payload($pdo, $slugTmp);
                                $meta = pages_get_metadata($pdo, $slugTmp);
                                if($meta){
                                    $settings['pages'][$slugTmp . '_meta_title'] = $meta['meta_title'] ?? '';
                                    $settings['pages'][$slugTmp . '_meta_description'] = $meta['meta_description'] ?? '';
                                }
                            }
                        }
                    ?>
                    <div class="accordion" id="pagesAccordion">
                        <div class="mb-3 small text-muted ps-1">Edit standard site pages below. Accessibility page is managed separately and not editable here.</div>
                        <?php foreach ($pages as $page_key => $page_title): 
                            $page_content = $settings['pages'][$page_key . '_content'] ?? '';
                            $page_meta_title = $settings['pages'][$page_key . '_meta_title'] ?? '';
                            $page_meta_desc = $settings['pages'][$page_key . '_meta_description'] ?? '';
                            // Structured parts for About page via page_payloads JSON
                            $payload = $page_payloads[$page_key] ?? [];
                            $about_heading = $payload['heading'] ?? ($settings['pages']['about_heading'] ?? 'About Us');
                            $about_intro = $payload['intro'] ?? ($settings['pages']['about_intro'] ?? '');
                            $about_image = $payload['image'] ?? ($settings['pages']['about_image'] ?? ''); // future path
                            $collapse_id = 'page-'.$page_key.'-body';
                            $heading_id = 'page-'.$page_key.'-heading';
                        ?>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="<?= $heading_id ?>">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#<?= $collapse_id ?>" aria-expanded="false" aria-controls="<?= $collapse_id ?>">
                                    <?= htmlspecialchars($page_title) ?>
                                </button>
                            </h2>
                            <div id="<?= $collapse_id ?>" class="accordion-collapse collapse" aria-labelledby="<?= $heading_id ?>" data-bs-parent="#pagesAccordion">
                                <div class="accordion-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label class="form-label">Meta Title</label>
                                                <input type="text" name="pages[<?= $page_key ?>_meta_title]" class="form-control" value="<?= htmlspecialchars($page_meta_title) ?>">
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label class="form-label">Meta Description</label>
                                                <input type="text" name="pages[<?= $page_key ?>_meta_description]" class="form-control" value="<?= htmlspecialchars($page_meta_desc) ?>">
                                            </div>
                                        </div>
                                        <?php if($page_key === 'about'): ?>
                                            <div class="col-12 mb-3">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <label class="form-label fw-bold mb-0">About Page Heading (Title)</label>
                                                    <small class="text-muted">Displayed above intro section</small>
                                                </div>
                                                <input type="text" class="form-control" name="pages[about_heading]" value="<?= htmlspecialchars($about_heading) ?>" placeholder="About Us">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label fw-bold">Intro Text</label>
                                                <textarea class="form-control" name="pages[about_intro]" rows="5" placeholder="Short intro paragraph"><?= htmlspecialchars($about_intro) ?></textarea>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label class="form-label fw-bold">About Image</label>
                                                <div class="border rounded p-3 bg-light d-flex flex-column gap-2 about-image-wrapper" data-page-slug="about">
                                                    <div class="image-preview">
                                                        <?php if($about_image): ?>
                                                            <img src="<?= htmlspecialchars($about_image) ?>" alt="About image" class="img-fluid rounded mb-2" style="max-height:160px;object-fit:cover;">
                                                        <?php else: ?>
                                                            <div class="text-muted small no-image-msg">No image selected.</div>
                                                        <?php endif; ?>
                                                    </div>
                                                    <div class="d-flex gap-2 flex-wrap">
                                                        <input type="file" class="form-control form-control-sm about-image-input" accept="image/*" style="max-width:240px;">
                                                        <button type="button" class="btn btn-sm btn-outline-primary about-image-upload-btn" data-page="about">Upload</button>
                                                        <button type="button" class="btn btn-sm btn-outline-danger about-image-remove-btn" data-page="about"<?= $about_image? '' : ' disabled' ?>>Remove</button>
                                                    </div>
                                                    <div class="small text-muted">JPG/PNG/WebP up to 2MB. Auto resized later (TODO).</div>
                                                    <div class="about-image-status small text-muted" aria-live="polite"></div>
                                                </div>
                                            </div>
                                            <div class="col-12 mb-3">
                                                <label class="form-label fw-bold">Main Body Content</label>
                                                <textarea name="pages[<?= $page_key ?>_content]" class="form-control summernote" rows="10"><?= htmlspecialchars($page_content) ?></textarea>
                                            </div>
                                        <?php else: ?>
                                            <div class="col-12 mb-3">
                                                <div class="form-group">
                                                    <label class="form-label">Page Content</label>
                                                    <textarea name="pages[<?= $page_key ?>_content]" class="form-control summernote" rows="10"><?= htmlspecialchars($page_content) ?></textarea>
                                                </div>
                                            </div>
                                        <?php endif; ?>
                                        <div class="col-12 d-flex justify-content-end">
                                            <button type="button" class="btn btn-sm btn-outline-primary page-ajax-save-btn" data-page-slug="<?= $page_key ?>">
                                                <span class="save-label">Save Page (AJAX)</span>
                                            </button>
                                            <span class="ms-2 small page-save-status text-muted" data-page-slug="<?= $page_key ?>"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <?php endforeach; ?>
                    </div>
                </div>
            </div>
            <div class="card-footer bg-light">
                <div class="content-header form-actions-header">
                    <div class="form-actions">
                        <a href="settings_dash.php" class="btn btn-outline-secondary" aria-label="Cancel and return to settings dashboard">
                            <i class="bi bi-arrow-left" aria-hidden="true"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-success" aria-label="Save content changes">
                            <i class="bi bi-save me-2"></i>Save Content
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>


<style>
/* Tab Navigation (synced with polling system) */
.tab-nav {display:flex;border-bottom:2px solid #dee2e6;margin-bottom:0;position:relative;background-color:transparent;padding:1rem 0 0 0;}
.tab-btn {background:#f8f9fa;border:2px solid #dee2e6;border-bottom:2px solid #dee2e6;padding:12px 24px;cursor:pointer;font-size:14px;font-weight:500;color:#6c757d;transition:all .3s ease;border-radius:8px 8px 0 0;margin-right:4px;position:relative;outline:none;}
.tab-btn:focus{outline:none;box-shadow:0 0 0 3px rgba(13,110,253,.25);}
.tab-btn:hover {color:#495057;background:#e9ecef;border-color:#adb5bd;border-bottom-color:#adb5bd;}
.tab-btn.active,.tab-btn[aria-selected="true"]{color:#0d6efd;background:#fff;border-color:#dee2e6 #dee2e6 transparent;font-weight:600;z-index:2;border-bottom:2px solid #fff;margin-bottom:-2px;}
.tab-content {display:none;padding:30px;background:#fff;border:2px solid #dee2e6;border-top:none;border-radius:0 8px 8px 8px;margin-top:0;margin-left:0;}
.tab-content.active {display:block;}
@media (max-width:768px){.tab-nav{flex-wrap:wrap;padding:15px 0 0 0}.tab-btn{font-size:12px;padding:10px 16px}.tab-content{padding:20px 15px}}
/* Hero image horizontal strip */
#heroImageGrid {display:flex;flex-wrap:wrap;gap:.75rem;background:#f8f9fa;padding:.6rem .75rem;border:1px solid #dee2e6;border-radius:8px;overflow-x:auto;-webkit-overflow-scrolling:touch;scrollbar-width:thin;}
.hero-thumb {position:relative;cursor:pointer;flex:0 0 auto;width:140px;text-align:center;font-size:11px;background:#fff;border:2px solid transparent;border-radius:8px;padding:6px;transition:.15s box-shadow,.15s border-color;display:flex;flex-direction:column;}
.hero-thumb{overflow:hidden;}
.hero-thumb.none-option{background:repeating-linear-gradient(45deg,#f8f9fa,#f8f9fa 10px,#eef1f4 10px,#eef1f4 20px);} 
.hero-thumb input{position:absolute;opacity:0;pointer-events:none;}
.hero-thumb .meta{display:block;color:#6c757d;font-size:10px;line-height:1.1;}
.hero-thumb:hover{border-color:#adb5bd;box-shadow:0 0 0 2px rgba(0,123,255,.15);} 
.hero-thumb.selected{border-color:#0d6efd;box-shadow:0 0 0 2px rgba(13,110,253,.35);} 
#heroImageGrid .extra-meta{font-size:10px;line-height:1.1;}
.hero-note code{background:#e9ecef;padding:1px 4px;border-radius:4px;font-size:90%;}
.ajax-uploading #heroUploadBtn{pointer-events:none;opacity:.5;}
</style>
<script>
function openTab(evt, tabId){
    const target=document.getElementById(tabId);
    if(!target) return;
    document.querySelectorAll('.tab-content.active').forEach(c=>c.classList.remove('active'));
    document.querySelectorAll('.tab-btn.active').forEach(b=>{b.classList.remove('active');b.setAttribute('aria-selected','false');});
    target.classList.add('active');
    if(evt && evt.currentTarget){
        evt.currentTarget.classList.add('active');
        evt.currentTarget.setAttribute('aria-selected','true');
    }
    // update hidden active_tab field for PRG redirect
    const hidden = document.getElementById('active_tab_input');
    if(hidden){
        const baseName = tabId.replace(/-tab$/,'');
        hidden.value = baseName;
    }
    // Only update hash silently without triggering navigation
    if(tabId.endsWith('-tab')) {
        const base = tabId.replace('-tab','');
        if(location.hash !== '#'+base) {
            // Use replaceState to avoid scroll jump but throttle via rAF
            requestAnimationFrame(()=>history.replaceState(null,'','#'+base));
        }
    }
}
// keyboard nav similar to polling system
document.addEventListener('keydown',function(e){
    if(!e.target.classList.contains('tab-btn')) return;
    const btns=[...document.querySelectorAll('.tab-btn')];
    const idx=btns.indexOf(e.target);let next=idx;
    if(e.key==='ArrowLeft') next= idx>0?idx-1:btns.length-1; else if(e.key==='ArrowRight') next= idx<btns.length-1?idx+1:0; else if(e.key==='Home') next=0; else if(e.key==='End') next=btns.length-1; else return;
    e.preventDefault();btns[next].focus();btns[next].click();
});
// Summernote init & validation
document.addEventListener('DOMContentLoaded',function(){
    if(window.jQuery && $('.summernote').length){
        $('.summernote').summernote({height:300,toolbar:[['style',['style']],['font',['bold','italic','underline','clear']],['color',['color']],['para',['ul','ol','paragraph']],['insert',['link','picture']],['view',['fullscreen','codeview']]]});
    }
    document.querySelectorAll('.needs-validation').forEach(form=>{form.addEventListener('submit',e=>{if(!form.checkValidity()){e.preventDefault();e.stopPropagation();}form.classList.add('was-validated');});});
    // Delegated tab button support for data-tab-target
    document.addEventListener('click',function(e){
        const btn = e.target.closest('.tab-btn[data-tab-target]');
        if(!btn) return;
        const targetId = btn.getAttribute('data-tab-target');
        if(typeof openTab === 'function'){
            openTab(e, targetId);
        }
    });
    // On submit update hidden active_tab to currently visible tab to persist after PRG redirect
    const mainForm = document.getElementById('contentSettingsForm');
    if(mainForm){
        mainForm.addEventListener('submit',function(){
            const activePanel = document.querySelector('.tab-content.active');
            const hidden = document.getElementById('active_tab_input');
            if(activePanel && hidden){ hidden.value = activePanel.id.replace(/-tab$/,''); }
        });
    }
    // hash activation
    const hash=window.location.hash.replace('#','');
    if(hash){
        const target=document.getElementById(hash+'-tab');
        const btn=document.getElementById(hash+'-tab-btn');
        if(target&&btn){
            // Directly activate without synthetic click to avoid recursion
            openTab({currentTarget:btn}, hash+'-tab');
        }
    }
    // Hero image strip selection visual
    const grid=document.getElementById('heroImageGrid');
    if(grid){
        grid.addEventListener('change',e=>{
            if(e.target && e.target.matches('input[type="radio"]')){
                grid.querySelectorAll('.hero-thumb').forEach(i=>i.classList.remove('selected'));
                const label = e.target.closest('.hero-thumb');
                if(label){label.classList.add('selected');}
            }
        });
        // Auto-show currently selected
        const checked=grid.querySelector('input[type="radio"]:checked');
        if(checked){checked.dispatchEvent(new Event('change',{bubbles:true}));}
    }
    // AJAX hero upload
    const uploadForm=document.getElementById('heroUploadOnlyForm');
    if(uploadForm){
        uploadForm.addEventListener('submit',function(e){
            e.preventDefault();
            const fileInput=document.getElementById('heroUploadInput');
            if(!fileInput.files.length) return;
            const fd=new FormData(uploadForm);
            fd.append('ajax','1');
            document.body.classList.add('ajax-uploading');
            fetch('',{method:'POST',body:fd}).then(r=>{ if(!r.ok) throw new Error('HTTP '+r.status); return r.text();}).then(html=>{
                const parser=new DOMParser();
                const doc=parser.parseFromString(html,'text/html');
                const newGrid=doc.querySelector('#heroImageGrid');
                if(newGrid && document.querySelector('#heroImageGrid')){
                    document.querySelector('#heroImageGrid').innerHTML=newGrid.innerHTML;
                }
                const newAlerts=doc.querySelectorAll('.flash-messages .alert');
                const flash=document.querySelector('.flash-messages');
                if(flash && newAlerts.length){
                    flash.innerHTML='';
                    newAlerts.forEach(a=>flash.appendChild(a));
                }
            }).catch(err=>{alert('Upload failed: '+ (err && err.message? err.message : 'Unknown error'));}).finally(()=>{document.body.classList.remove('ajax-uploading');});
        });
    }
    // Remove selected hero image
    const removeBtn=document.getElementById('heroRemoveBtn');
    if(removeBtn){
        removeBtn.addEventListener('click',function(){
            const selected=document.querySelector('#heroImageGrid input[type="radio"]:checked');
            if(!selected){alert('No image selected to remove.');return;}
            if(!confirm('Delete this hero image file from server? This cannot be undone.')) return;
            fetch('hero_image_delete.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({file:selected.value})})
              .then(r=>r.json())
              .then(js=>{if(js.success){window.location.reload();} else {alert(js.message||'Delete failed');}})
              .catch(()=>alert('Delete request failed.'));
        });
    }
    // ---- Per-service AJAX save ----
    function attachServiceCardHandlers(scope){
        (scope||document).querySelectorAll('.service-save-btn').forEach(btn=>{
            if(btn.dataset.bound) return; btn.dataset.bound='1';
            btn.addEventListener('click',function(){
                const card = btn.closest('.service-card');
                if(!card) return;
                const id = card.getAttribute('data-service-id');
                if(!/^[0-9]+$/.test(id)){ alert('Cannot save unsaved service yet.'); return; }
                const title = card.querySelector('.service-title')?.value || '';
                const icon  = card.querySelector('.service-icon')?.value || '';
                const body  = card.querySelector('.service-body')?.value || '';
                const statusEl = card.querySelector('.service-save-status');
                if(statusEl){ statusEl.textContent='Saving...'; statusEl.classList.remove('text-success','text-danger'); }
                fetch('ajax_service_update.php',{method:'POST',headers:{'X-Requested-With':'XMLHttpRequest'},body:new URLSearchParams({id,title,icon,body})})
                  .then(r=>r.json())
                  .then(j=>{ if(j.ok){ if(statusEl){ statusEl.textContent='Saved'; statusEl.classList.add('text-success'); }} else { if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }} })
                  .catch(()=>{ if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }});
            });
        });
    }
    attachServiceCardHandlers();
    // Placeholder Add Service (UI only for now)
    const addServiceBtn = document.getElementById('addServiceBtn');
    if(addServiceBtn){
        addServiceBtn.addEventListener('click',function(){
            const row = document.getElementById('servicesCardsRow');
            if(!row) return;
            const tempId = 'new_'+Date.now();
            const div = document.createElement('div');
            div.className='col-12 mb-4 service-card-wrapper';
            div.innerHTML = `\n<div class="card service-card h-100 border-warning" data-service-id="${tempId}">\n  <div class=\"card-header d-flex justify-content-between align-items-center flex-wrap gap-2\">\n    <div><h4 class=\"mb-0 text-truncate\">New Service (Unsaved)</h4><span class=\"small text-muted\">Temp ID</span></div>\n    <div class=\"d-flex align-items-center gap-2\">\n      <span class=\"service-save-status small text-muted\"></span>\n      <button type=\"button\" class=\"btn btn-sm btn-outline-success service-save-btn\" disabled title=\"Save not available until create implemented\">Save</button>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row g-3\">\n      <div class=\"col-md-4\">\n        <label class=\"form-label fw-bold\">Title</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Title\" disabled>\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"form-label fw-bold\">Icon</label>\n        <input type=\"text\" class=\"form-control\" placeholder='<i class=\\"bi bi-gear\\"></i>' disabled>\n      </div>\n      <div class=\"col-md-4\">\n        <label class=\"form-label fw-bold\">(Future) Image Upload</label>\n        <div class=\"border rounded p-2 bg-light text-muted small\">Placeholder</div>\n      </div>\n      <div class=\"col-12\">\n        <label class=\"form-label fw-bold\">Description</label>\n        <textarea class=\"form-control\" rows=\"4\" placeholder=\"Description\" disabled></textarea>\n      </div>\n    </div>\n    <div class=\"mt-2 small text-muted\">Creation via AJAX not yet implemented.</div>\n  </div>\n</div>`;
            row.appendChild(div);
        });
    }
        // Delete handlers (event delegation)
        document.addEventListener('click',function(e){
                const btn = e.target.closest('.service-delete-btn');
                if(!btn) return;
                const card = btn.closest('.service-card');
                if(!card) return;
                const id = card.getAttribute('data-service-id');
                if(!/^[0-9]+$/.test(id)){ card.remove(); return; }
                if(!confirm('Delete this service? (It will be deactivated)')) return;
                const statusEl = card.querySelector('.service-save-status');
                if(statusEl){ statusEl.textContent='Deleting...'; statusEl.classList.remove('text-success','text-danger'); }
                fetch('ajax_service_delete.php',{method:'POST',headers:{'X-Requested-With':'XMLHttpRequest'},body:new URLSearchParams({id})})
                    .then(r=>r.json())
                    .then(j=>{ if(j.ok){ card.classList.add('opacity-50'); card.style.transition='opacity .4s'; setTimeout(()=>card.parentElement.remove(),400); } else { if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }} })
                    .catch(()=>{ if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }});
        });
                // Services Intro AJAX save
                const introSaveBtn = document.getElementById('servicesIntroSaveBtn');
                if(introSaveBtn){
                    introSaveBtn.addEventListener('click',function(){
                        const titleInput = document.querySelector('input[name="services_section_title"]');
                        const paraInput = document.querySelector('textarea[name="services_section_paragraph"]');
                        const status = document.querySelector('.service-intro-status');
                        const title = titleInput? titleInput.value.trim(): '';
                        const paragraph = paraInput? paraInput.value.trim(): '';
                        if(status){ status.textContent='Saving...'; status.classList.remove('text-success','text-danger'); }
                        fetch('ajax_services_intro_update.php',{method:'POST',headers:{'X-Requested-With':'XMLHttpRequest'},body:new URLSearchParams({title,paragraph})})
                          .then(r=>r.json())
                          .then(j=>{ if(j.ok){ if(status){ status.textContent='Saved'; status.classList.add('text-success'); }} else { if(status){ status.textContent='Error'; status.classList.add('text-danger'); }} })
                          .catch(()=>{ if(status){ status.textContent='Error'; status.classList.add('text-danger'); }});
                    });
                }
    // ---- Per-page AJAX save ----
    document.querySelectorAll('.page-ajax-save-btn').forEach(btn=>{
        btn.addEventListener('click', function(){
            const slug = btn.getAttribute('data-page-slug');
            if(!slug) return;
            const statusEl = document.querySelector('.page-save-status[data-page-slug="'+slug+'"]');
            if(statusEl){ statusEl.textContent='Saving...'; statusEl.classList.remove('text-success','text-danger'); }
            // Collect fields
            const metaTitle = document.querySelector('[name="pages['+slug+'_meta_title]"]')?.value || '';
            const metaDesc  = document.querySelector('[name="pages['+slug+'_meta_description]"]')?.value || '';
            const content   = document.querySelector('[name="pages['+slug+'_content]"]')?.value || '';
                        // Basic inline validation
                        if(metaTitle.length > 70){ if(statusEl){ statusEl.textContent='Meta title too long (70 max)'; statusEl.classList.add('text-danger'); } return; }
                        if(metaDesc.length > 160){ if(statusEl){ statusEl.textContent='Meta description too long (160 max)'; statusEl.classList.add('text-danger'); } return; }
            const params = new URLSearchParams();
            params.append('slug', slug);
            params.append('meta_title', metaTitle);
            params.append('meta_description', metaDesc);
            // Structured About page parts
            if(slug === 'about') {
                const heading = document.querySelector('[name="pages[about_heading]"]')?.value || '';
                const intro   = document.querySelector('[name="pages[about_intro]"]')?.value || '';
                                if(!heading.trim()) { if(statusEl){ statusEl.textContent='Heading required'; statusEl.classList.add('text-danger'); } return; }
                params.append('part_heading', heading);
                params.append('part_intro', intro);
                params.append('part_body', content);
            } else {
                params.append('part_body', content);
            }
            fetch('ajax_page_update.php',{method:'POST',headers:{'X-Requested-With':'XMLHttpRequest'},body:params})
              .then(r=>r.json())
              .then(j=>{ if(j.ok){ if(statusEl){ statusEl.textContent='Saved'; statusEl.classList.add('text-success'); }} else { if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }} })
              .catch(()=>{ if(statusEl){ statusEl.textContent='Error'; statusEl.classList.add('text-danger'); }});
        });
    });
        // Page image upload (About page for now)
        document.querySelectorAll('.about-image-upload-btn').forEach(btn=>{
                btn.addEventListener('click',()=>{
                        const wrap = btn.closest('.about-image-wrapper');
                        const input = wrap.querySelector('.about-image-input');
                        const status = wrap.querySelector('.about-image-status');
                        if(!input.files.length){ status.textContent='Select an image first'; status.classList.add('text-danger'); return; }
                        const file = input.files[0];
                        if(file.size > 2*1024*1024){ status.textContent='File exceeds 2MB'; status.classList.add('text-danger'); return; }
                        const fd = new FormData();
                        fd.append('slug','about');
                        fd.append('image', file);
                        status.textContent='Uploading...'; status.classList.remove('text-danger','text-success');
                        fetch('ajax_page_image_upload.php',{method:'POST',body:fd})
                            .then(r=>r.json())
                            .then(j=>{
                                 if(j.ok){
                                        status.textContent='Uploaded'; status.classList.add('text-success');
                                        const preview = wrap.querySelector('.image-preview');
                                        if(preview){ preview.innerHTML = '<img src="'+j.path+'" alt="About image" class="img-fluid rounded mb-2" style="max-height:160px;object-fit:cover;">'; }
                                        const removeBtn = wrap.querySelector('.about-image-remove-btn'); if(removeBtn){ removeBtn.disabled=false; }
                                 } else {
                                        status.textContent=j.error||'Error'; status.classList.add('text-danger');
                                 }
                            })
                            .catch(()=>{ status.textContent='Error'; status.classList.add('text-danger'); });
                });
        });
        // Page image remove (soft clear only, does not delete file yet)
        document.querySelectorAll('.about-image-remove-btn').forEach(btn=>{
                btn.addEventListener('click',()=>{
                        if(!confirm('Remove About image reference? File will remain on server.')) return;
                        const wrap = btn.closest('.about-image-wrapper');
                        const status = wrap.querySelector('.about-image-status');
                        const preview = wrap.querySelector('.image-preview');
                        status.textContent='Clearing...'; status.classList.remove('text-danger','text-success');
                        // Persist clear via AJAX update (set image key to empty)
                        const params=new URLSearchParams();
                        params.append('slug','about');
                        params.append('meta_title', document.querySelector('[name="pages[about_meta_title]"]')?.value || '');
                        params.append('meta_description', document.querySelector('[name="pages[about_meta_description]"]')?.value || '');
                        params.append('part_heading', document.querySelector('[name="pages[about_heading]"]')?.value || '');
                        params.append('part_intro', document.querySelector('[name="pages[about_intro]"]')?.value || '');
                        params.append('part_body', document.querySelector('[name="pages[about_content]"]')?.value || '');
                        // Force empty image by updating payload directly
                        fetch('ajax_page_update.php',{method:'POST',headers:{'X-Requested-With':'XMLHttpRequest'},body:params})
                            .finally(()=>{
                                if(preview){ preview.innerHTML='<div class="text-muted small no-image-msg">No image selected.</div>'; }
                                status.textContent='Cleared (payload updated on next save)'; status.classList.add('text-success');
                                btn.disabled=true;
                            });
                });
        });
});
</script>

<?= template_admin_footer() ?>