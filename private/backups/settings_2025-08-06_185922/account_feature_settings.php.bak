<?php
/**
 * Account System Settings Management
 * 
 * SYSTEM: GWS Universal Hybrid App - Admin Panel
 * FILE: account_feature_settings.php
 * LOCATION: /public_html/admin/settings/
 * PURPOSE: Manage account system configuration settings - user management, security, notifications
 * 
 * CREATED: 2025-07-04
 * UPDATED: 2025-07-04
 * VERSION: 1.0
 * PRODUCTION: [READY FOR PRODUCTION]
 * 
 * 2025-07-04 - Initial creation with account system settings management
 * 2025-07-04 - Professional UI with modern Bootstrap styling and tabbed interface
 * 2025-07-22 - Renamed to account_feature_settings.php; Quality Assurance and Accessibility Testing completed; header and changelog updated; confirmed production readiness
 * 
 * FEATURES:
 * */

include_once '../assets/includes/main.php';

// Load persistent account settings from config file
$settings_file = PROJECT_ROOT . '/public_html/assets/includes/settings/account_settings.php';
if (file_exists($settings_file))
{
    include $settings_file;
} else
{
    $account_settings = [];
}

?>
<?= template_admin_header('Accounts', 'accounts', 'view') ?>

<div class="content-title">
    <div class="title">
        <div class="icon">
            <svg width="18" height="18" xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 640 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                <path
                    d="M144 0a80 80 0 1 1 0 160A80 80 0 1 1 144 0zM512 0a80 80 0 1 1 0 160A80 80 0 1 1 512 0zM0 298.7C0 239.8 47.8 192 106.7 192h42.7c15.9 0 31 3.5 44.6 9.7c-1.3 7.2-1.9 14.7-1.9 22.3c0 38.2 16.8 72.5 43.3 96c-.2 0-.4 0-.7 0H21.3C9.6 320 0 310.4 0 298.7zM405.3 320c-.2 0-.4 0-.7 0c26.6-23.5 43.3-57.8 43.3-96c0-7.6-.7-15-1.9-22.3c13.6-6.3 28.7-9.7 44.6-9.7h42.7C592.2 192 640 239.8 640 298.7c0 11.8-9.6 21.3-21.3 21.3H405.3zM224 224a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zM128 485.3C128 411.7 187.7 352 261.3 352H378.7C452.3 352 512 411.7 512 485.3c0 14.7-11.9 26.7-26.7 26.7H154.7c-14.7 0-26.7-11.9-26.7-26.7z" />
            </svg>
        </div>
        <div class="txt">
            <h2>Accounts</h2>
            <p>View, edit, and create accounts.</p>
        </div>
    </div>
</div>
<br>
<form action="" method="post" id="accountSettingsForm" novalidate>
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center"
            style="padding: 1.25rem 1.5rem;">
            <h5 class="mb-0">Account System Settings</h5>
            <button type="submit" class="btn btn-success px-4">
                <i class="fas fa-save me-2"></i>Save Settings
            </button>
        </div>
        <div class="card-body" style="padding: 2rem 1.5rem;">
            <?php
            $field_meta = [
                'registration_enabled' => ['Enable User Registration', 'boolean', 'Allow new users to register accounts'],
                'email_verification_required' => ['Require Email Verification', 'boolean', 'Users must verify their email address before accessing their account'],
                'min_password_length' => ['Minimum Password Length', 'number', 'Minimum number of characters required for passwords'],
                'password_complexity_required' => ['Require Complex Passwords', 'boolean', 'Passwords must contain uppercase, lowercase, numbers, and special characters'],
                'max_login_attempts' => ['Maximum Login Attempts', 'number', 'Number of failed login attempts before account lockout'],
                'login_lockout_duration' => ['Lockout Duration (seconds)', 'number', 'How long to lock accounts after failed login attempts'],
                'session_timeout' => ['Session Timeout (seconds)', 'number', 'How long user sessions remain active without activity'],
                'rememberme_duration' => ['Remember Me Duration (seconds)', 'number', 'How long "Remember Me" sessions last'],
                'notification_email_welcome' => ['Send Welcome Emails', 'boolean', 'Send welcome email to new users after registration'],
                'notification_email_password_reset' => ['Send Password Reset Emails', 'boolean', 'Send email notifications for password reset requests'],
                'notification_email_login_alerts' => ['Send Login Alert Emails', 'boolean', 'Send email alerts for new login sessions'],
                'default_role' => ['Default User Role', 'select', 'Default role assigned to new user accounts', ['Member', 'Admin', 'Guest']],
                'avatar_upload_enabled' => ['Enable Avatar Uploads', 'boolean', 'Allow users to upload profile pictures'],
                'avatar_max_size' => ['Maximum Avatar Size (bytes)', 'number', 'Maximum file size for avatar uploads'],
                'profile_fields_required' => ['Required Profile Fields', 'text', 'Comma-separated list of required profile fields'],
                'two_factor_auth_enabled' => ['Enable Two-Factor Authentication', 'boolean', 'Require two-factor authentication for login'],
                'social_login_enabled' => ['Enable Social Login', 'boolean', 'Allow users to login with social accounts'],
                'password_reset_token_expiry' => ['Password Reset Token Expiry (seconds)', 'number', 'How long password reset tokens are valid'],
                'username_min_length' => ['Minimum Username Length', 'number', 'Minimum number of characters for usernames'],
                'username_max_length' => ['Maximum Username Length', 'number', 'Maximum number of characters for usernames'],
                'profile_picture_types' => ['Allowed Profile Picture Types', 'text', 'Comma-separated list of allowed image types'],
                'auto_cleanup_inactive_days' => ['Auto Cleanup Inactive Days', 'number', 'Days before inactive accounts are cleaned up'],
                'gdpr_compliance_enabled' => ['Enable GDPR Compliance', 'boolean', 'Enable GDPR compliance features'],
                'audit_log_enabled' => ['Enable Audit Log', 'boolean', 'Log account system actions for auditing'],
                'api_access_enabled' => ['Enable API Access', 'boolean', 'Allow API access for accounts']
            ];
            foreach ($account_settings as $key => $value):
                if (!isset($field_meta[$key]))
                    continue;
                $meta = $field_meta[$key];
                ?>
                <div class="col-md-6">
                    <div class="form-group mb-4">
                        <label for="<?= $key ?>" class="form-label fw-bold">
                            <?= htmlspecialchars($meta[0]) ?>
                        </label>
                        <?php if (!empty($meta[2])): ?>
                            <div class="form-text text-muted mb-2">
                                <?= htmlspecialchars($meta[2]) ?>
                            </div>
                        <?php endif; ?>
                        <?php if ($meta[1] === 'boolean'): ?>
                            <input type="hidden" name="<?= $key ?>" value="false">
                            <div class="form-check form-switch">
                                <input type="checkbox" name="<?= $key ?>" id="<?= $key ?>" class="form-check-input" value="true"
                                    <?= $value ? ' checked' : '' ?>>
                                <label class="form-check-label" for="<?= $key ?>">
                                    Enable <?= htmlspecialchars($meta[0]) ?>
                                </label>
                            </div>
                        <?php elseif ($meta[1] === 'select'): ?>
                            <select name="<?= $key ?>" id="<?= $key ?>" class="form-select">
                                <?php foreach ($meta[3] as $option): ?>
                                    <option value="<?= htmlspecialchars($option) ?>" <?= $value === $option ? ' selected' : '' ?>>
                                        <?= htmlspecialchars($option) ?>
                                    </option>
                                <?php endforeach; ?>
                            </select>
                        <?php elseif ($meta[1] === 'number'): ?>
                            <input type="number" name="<?= $key ?>" id="<?= $key ?>" class="form-control text-end"
                                value="<?= htmlspecialchars($value) ?>">
                        <?php else: ?>
                            <input type="text" name="<?= $key ?>" id="<?= $key ?>" class="form-control"
                                value="<?= htmlspecialchars($value) ?>">
                        <?php endif; ?>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
    <?= template_admin_footer() ?>