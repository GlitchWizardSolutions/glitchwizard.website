<?php
/*
 * GWS UNIVERSAL HYBRID APP - MASTER APPLICATION INTEGRATION CHECKLIST
 * 
 * SYSTEM: Universal Admin Integration Framework
 * PURPOSE: Single entry point for AI-assisted application integration
 * CREATED: August 10, 2025
 * VERSION: 1.0
 * 
 * USAGE INSTRUCTIONS FOR AI:
 * When asked to integrate an application, follow this checklist step by step.
 * Reference OrganizationPlan.php for system-wide implementation details.
 * Reference canonical-plan.php.bak for specific formatting and styling standards.
 * 
 * KEY PROCESSES:
 * - CSS/JS Optimization: Phase 5 deployment_preparation contains detailed asset optimization process
 *   (Eliminates redundancy with central admin template, typically achieves 90%+ code reduction)
 * 
 * SAFETY FIRST: Always preserve existing functionality across ALL contexts.
 */

// ============================================================================
// MASTER INTEGRATION CHECKLIST
// ============================================================================

$master_integration_checklist = [
    'phase_0_preparation' => [
        'title' => 'Pre-Integration Safety Setup',
        'required_before_starting' => true,
        'steps' => [
            '1_backup_verification' => [
                'action' => 'Verify complete system backup exists',
                'check' => 'Confirm rollback capability for all contexts',
                'safety_requirement' => 'Must be able to restore to current state'
            ],
            '2_context_analysis' => [
                'action' => 'Analyze impact across ALL contexts',
                'contexts_to_check' => [
                    'admin' => '/public_html/admin/',
                    'client_portal' => '/public_html/client_portal/',
                    'public_website' => '/public_html/',
                    'accounts_system' => '/public_html/accounts_system/',
                    'blog_system' => '/public_html/blog_system/',
                    'shared_universal' => '/private/ and /assets/'
                ],
                'verification_requirement' => 'Confirm integration will not affect other contexts'
            ],
            '3_documentation_review' => [
                'action' => 'Review integration documentation',
                'required_documents' => [
                    'OrganizationPlan.php' => 'System-wide implementation guidance',
                    'canonical-plan.php.bak' => 'Technical formatting and styling standards',
                    'this_checklist' => 'Step-by-step integration process'
                ]
            ]
        ]
    ],

    'phase_1_system_analysis' => [
        'title' => 'Application Analysis and Database Planning',
        'reference_document' => 'OrganizationPlan.php',
        'steps' => [
            '1_application_inventory' => [
                'action' => 'Catalog all application files and dependencies',
                'inventory_requirements' => [
                    'php_files' => 'List all PHP files and their purposes',
                    'css_files' => 'Identify custom CSS that needs integration (NOTE: Will be optimized in Phase 5 deployment)',
                    'js_files' => 'Identify custom JavaScript functionality (NOTE: Will be optimized in Phase 5 deployment)',
                    'assets' => 'Images, fonts, and other static assets',
                    'config_files' => 'Application-specific configuration',
                    'icon_audit' => 'Check FontAwesome version compatibility - must use FA 5.x classes (fas fa-icon NOT fa-solid)',
                    'icon_policy' => 'NO icons in card headers or fieldset legends - buttons and content only'
                ]
            ],
            '2_database_analysis' => [
                'action' => 'Analyze database requirements and naming',
                'database_best_practices' => [
                    'table_naming' => 'Use prefixed naming: {appname}_{table} (e.g., tickets_categories)',
                    'existing_tables' => 'Check current table names against best practices',
                    'relationship_mapping' => 'Document foreign key relationships',
                    'data_integrity' => 'Ensure referential integrity is maintained'
                ],
                'naming_conversion_check' => [
                    'current_names' => 'Document existing table names',
                    'recommended_names' => 'Apply prefix naming convention',
                    'migration_required' => 'Determine if table renames are needed',
                    'impact_analysis' => 'Check if other systems reference these tables'
                ]
            ],
            '3_navigation_structure_planning' => [
                'action' => 'Plan navigation integration and menu structure',
                'navigation_requirements' => [
                    'menu_hierarchy' => 'Determine main menu item name and sub-menu items',
                    'parameter_mapping' => 'Define $selected and $selected_child values for each page',
                    'main_php_updates' => 'Add navigation menu items to admin/assets/includes/main.php',
                    'header_parameter_planning' => 'Document template_admin_header() parameters for each page'
                ],
                'menu_integration_steps' => [
                    'main_menu_item' => 'Add primary navigation item with icon and count (if applicable)',
                    'sub_menu_items' => 'Add sub-navigation items with proper routing',
                    'selection_logic' => 'Implement $selected and $selected_child conditional highlighting',
                    'testing_plan' => 'Plan verification of navigation highlighting on each page'
                ]
            ],
            '4_dependency_mapping' => [
                'action' => 'Map all external dependencies and includes',
                'dependency_types' => [
                    'function_dependencies' => 'Custom functions the app requires',
                    'library_dependencies' => 'Third-party libraries (PHPMailer, etc.)',
                    'css_framework_needs' => 'Bootstrap components, Font Awesome icons',
                    'javascript_requirements' => 'jQuery, custom scripts, event handlers'
                ]
            ]
        ]
    ],

    'phase_2_technical_integration' => [
        'title' => 'Technical Integration Implementation',
        'reference_document' => 'canonical-plan.php.bak',
        '⚠️_CRITICAL_WARNING' => '🚨 DO NOT FORGET: Every page MUST have content title block with 18x18 SVG icon, proper structure, and <br> tag after template_admin_header()! This is the most commonly missed requirement! 🚨',
        'steps' => [
            '1_includes_standardization' => [
                'action' => 'Update main include file for admin standards',
                'required_changes' => [
                    'main_php_update' => 'Replace legacy includes with ../assets/includes/main.php',
                    'authentication_upgrade' => 'Use unified admin authentication system',
                    'database_connection' => 'Use standard PDO connection from admin main.php',
                    'function_integration' => 'Add app-specific functions to universal functions or keep isolated'
                ]
            ],
            '2_template_standardization' => [
                'action' => 'Apply admin template structure to all pages',
                'template_requirements' => [
                    'header_replacement' => 'Replace custom headers with template_admin_header()',
                    'footer_replacement' => 'Replace custom footers with template_admin_footer()',
                    'navigation_integration' => 'Ensure app appears in admin navigation',
                    'navigation_alignment' => 'Verify template_admin_header() parameters match navigation menu structure',
                    'breadcrumb_setup' => 'Implement proper breadcrumb navigation'
                ],
                'CRITICAL_CONTENT_TITLE_REQUIREMENT' => [
                    'MANDATORY' => 'EVERY admin page MUST include content title block immediately after template_admin_header()',
                    'PLACEMENT' => 'Goes directly after <?php echo template_admin_header(...); ?> and before any other content',
                    'REQUIRED_STRUCTURE' => 'Must include <div class="content-title" id="main-[page]" role="banner">, icon div with 18x18 SVG, h2, p, and <br> tag',
                    'COMMON_MISTAKE' => 'Using Font Awesome <i> tags instead of proper 18x18 SVG icons',
                    'VALIDATION' => 'Check every page has this block with proper accessibility attributes and unique IDs'
                ],
                'navigation_parameter_mapping' => [
                    'two_parameter_format' => 'template_admin_header("Page Title", "main_section") for main menu items',
                    'three_parameter_format' => 'template_admin_header("Page Title", "main_section", "sub_section") for sub-menu items',
                    'parameter_validation' => 'Ensure parameters exactly match $selected and $selected_child values in main.php navigation',
                    'testing_requirement' => 'Verify correct menu highlighting on each page load'
                ]
            ],
            '2.5_MANDATORY_CONTENT_TITLE_BLOCKS' => [
                '🚨_CRITICAL_STEP' => 'THIS STEP IS MANDATORY FOR EVERY PAGE - DO NOT SKIP',
                'action' => 'Add standardized content title block to EVERY admin page',
                'verification_required' => 'Check each page individually - NO EXCEPTIONS',
                'implementation_checklist' => [
                    'placement_verified' => 'Block goes immediately after template_admin_header() call',
                    'structure_complete' => 'Includes content-title div, icon div, title div, h2, p, and <br>',
                    'svg_icons_used' => 'Using 18x18 SVG icons, NOT Font Awesome <i> tags',
                    'accessibility_complete' => 'role="banner", aria-label, and unique id attributes',
                    'spacing_correct' => '<br> tag included after content-title block',
                    'mode_awareness' => 'Dynamic content for Create/Edit pages with ternary operators'
                ],
                'quality_check' => [
                    'visual_verification' => 'Load each page and verify content title appears correctly',
                    'accessibility_test' => 'Check ARIA attributes and semantic structure',
                    'responsive_test' => 'Verify appearance on mobile and desktop',
                    'consistency_check' => 'Compare against accounts.php canonical reference'
                ]
            ],
            '3_styling_integration' => [
                'action' => 'Integrate application styling with admin standards',
                'styling_requirements' => [
                    'button_standardization' => 'Apply canonical button patterns (btn-outline-secondary, btn-success, btn-danger)',
                    'table_standardization' => 'Use canonical table structure with .card, .table-dropdown actions',
                    'form_standardization' => 'Apply Bootstrap 5 form classes (.form-control, .form-label, .mb-3)',
                    'search_filter_layout' => 'Apply standardized search/filter interface with proper alignment (buttons left, search/filters right)',
                    'card_structure' => 'Use standard .card .card-header .card-body layout for content organization. Note: .content-block wrapper provides transparent background/spacing but avoid for cleaner card display',
                    'responsive_design' => 'Ensure mobile compatibility with existing responsive patterns'
                ],
                'specific_ui_patterns' => [
                    'canonical_buttons' => [
                        'create_add_links' => 'btn btn-primary (Create, Add - navigation to form pages)',
                        'submit_actions' => 'btn btn-success with icon (e.g., <i class="fas fa-save me-1"></i>Save Post)',
                        'destructive_actions' => 'btn btn-danger with icon (Delete, Remove - destructive operations)',
                        'secondary_actions' => 'btn btn-outline-secondary with icon (e.g., <i class="fas fa-arrow-left me-1"></i>Cancel)',
                        'button_placement' => 'Always at top of forms inside form tag. For longer forms, also at bottom with same formatting',
                        'button_layout' => 'd-flex gap-2 pb-3 border-bottom mb-3 (top) and d-flex gap-2 pt-3 border-top mt-4 (bottom)',
                        'icon_spacing' => 'Use me-1 class for proper spacing between icons and text',
                        'no_inline_css' => 'No inline styles or on-page CSS overrides - use Bootstrap classes only',
                        'bulk_operations' => 'Single "Bulk Import/Export [Entity]" button instead of separate Import/Export buttons',
                        'reference_file' => 'Follow add_post.php button formatting as the standard'
                    ],
                    'canonical_tables' => [
                        'structure' => '.card > .card-header + .card-body > .table > table',
                        'id_column_alignment' => 'ID column header must be left-aligned (style="text-align:left;")',
                        'title_column_alignment' => 'Title column header must be left-aligned (style="text-align:left;")',
                        'actions_column_alignment' => 'Actions column header centered (style="text-align:center;")',
                        'sort_indicators' => 'Use triangle characters (▲ ▼) instead of FontAwesome icons',
                        'actions_dropdown' => '.table-dropdown with .actions-btn and .table-dropdown-items',
                        'responsive_classes' => '.responsive-hidden for mobile optimization',
                        'search_filter_standardization' => [
                            'required_structure' => 'ALL admin list pages must use standardized search/filter interface',
                            'filter_dropdown' => [
                                'wrapper' => '<form><div class="filters"> with filter icon and "Filters" text',
                                'dropdown_list' => '<div class="list"> containing filter inputs and Apply button',
                                'input_types' => 'Use text inputs for names/emails, select dropdowns for status/categories',
                                'apply_button' => '<button type="submit">Apply</button> at bottom of filter list'
                            ],
                            'search_input' => [
                                'wrapper' => '<div class="search"> containing labeled input with search icon',
                                'input_structure' => '<label><input placeholder="Search..." class="responsive-width-100"><svg search icon></label>',
                                'icon_requirement' => 'Must include search icon SVG from FontAwesome',
                                'responsive_class' => 'Use responsive-width-100 class for mobile optimization'
                            ],
                            'active_filter_notifications' => [
                                'wrapper' => '<div class="filter-list"> containing active filter badges',
                                'filter_badges' => 'Each active filter shows as <div class="filter"> with X button to remove',
                                'remove_functionality' => 'Use remove_url_param() function to generate removal links',
                                'x_button_svg' => 'Include X icon SVG for filter removal',
                                'display_format' => 'Show as "Label : Value" (e.g., "Status : Read", "Search : keyword")'
                            ],
                            'reference_implementation' => [
                                'canonical_file' => 'accounts.php - complete reference implementation',
                                'updated_file' => 'blog-messages.php - standardized implementation example',
                                'required_function' => 'remove_url_param() function must be available in main.php'
                            ],
                            'layout_structure' => [
                                'container_wrapper' => 'ALL pages must use .content-header responsive-flex-column pad-top-5 wrapper',
                                'button_section' => 'Action buttons (Dashboard, Create, etc.) in flex container with proper styling',
                                'search_filter_section' => 'Form with filters and search on same line, right-justified',
                                'standard_layout_template' => '
<div class="content-header responsive-flex-column pad-top-5">
    <div style="display: flex; gap: 12px; flex-wrap: wrap; align-items: flex-start; margin-bottom: 18px;">
        <a href="[dashboard-url]" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i>[Dashboard Name]
        </a>
        <!-- Additional action buttons if needed -->
    </div>
    <!-- Search/Filter Form (right-justified on same line) -->
    <form action="" method="get">
        <div class="filters">
            <a href="#"><svg>...</svg>Filters</a>
            <div class="list">
                <!-- Filter inputs and Apply button -->
            </div>
        </div>
        <div class="search">
            <label>
                <input placeholder="Search..." class="responsive-width-100">
                <svg>...</svg>
            </label>
        </div>
    </form>
</div>',
                                'alignment_requirements' => [
                                    'left_aligned' => 'Dashboard/navigation buttons stay on left',
                                    'right_aligned' => 'Search and filter controls right-justified on same line',
                                    'responsive' => 'Mobile: stacks vertically, Desktop: horizontal alignment',
                                    'consistency' => 'Must match accounts.php visual layout exactly'
                                ]
                            ]
                        ],
                        'card_footer_pagination' => [
                            'adaptive_pagination_logic' => [
                                'small_dataset' => 'For <= 20 total records: Simple count only',
                                'medium_dataset' => 'For 21-100 total records: Show count + basic navigation if multiple pages',
                                'large_dataset' => 'For 100+ total records: Full pagination with "Showing X to Y of Z" + page navigation'
                            ],
                            'implementation_pattern' => '
<?php if ($total_records <= 20): ?>
    <div class="card-footer bg-light">
        <div class="small">Total [entities]: <?= $total_records ?></div>
    </div>
<?php elseif ($total_records <= 100): ?>
    <div class="card-footer bg-light">
        <div class="small">
            Total [entities]: <?= $total_records ?>
            <?php if ($total_pages > 1): ?>
                | Page <?= $page ?> of <?= $total_pages ?>
                <?php if ($page > 1): ?>
                    | <a href="?page=<?= $page - 1 ?>[params]">Previous</a>
                <?php endif; ?>
                <?php if ($page < $total_pages): ?>
                    | <a href="?page=<?= $page + 1 ?>[params]">Next</a>
                <?php endif; ?>
            <?php endif; ?>
        </div>
    </div>
<?php else: ?>
    <div class="card-footer bg-light">
        <div class="d-flex justify-content-between align-items-center">
            <div class="small">
                Showing <?= ($offset + 1) ?> to <?= min($offset + $per_page, $total_records) ?> of <?= $total_records ?> [entities]
            </div>
            <div class="small">
                Page <?= $page ?> of <?= $total_pages ?>
                <?php if ($page > 1): ?>
                    | <a href="?page=<?= $page - 1 ?>[params]">Previous</a>
                <?php endif; ?>
                <?php if ($page < $total_pages): ?>
                    | <a href="?page=<?= $page + 1 ?>[params]">Next</a>
                <?php endif; ?>
            </div>
        </div>
    </div>
<?php endif; ?>',
                            'clean_styling' => 'NO inline CSS styles - let Bootstrap handle spacing naturally',
                            'content_format' => 'Use .small class for subtle text styling',
                            'background' => 'Always use bg-light class for consistent appearance',
                            'reference_file' => 'blog-messages.php card footer is the canonical example for small datasets',
                            'avoid_pattern' => 'Do NOT use inline style="text-align:left;" or extra div.pagination wrappers'
                        ]
                    ],
                    'canonical_forms' => [
                        'overall_structure' => [
                            'card_wrapper' => 'ALL forms must be wrapped in Bootstrap card structure',
                            'card_header' => 'Include card-header with h6 title (NO icons in card headers)',
                            'card_body' => 'Main form content in card-body with proper padding',
                            'fieldset_organization' => 'Use fieldsets to logically group related fields (NO icons in legends)',
                            'responsive_layout' => 'Use row/col structure for proper responsive design',
                            'icon_policy' => 'NO icons in card headers or fieldset legends - clean text only'
                        ],
                        'standard_html_template' => [
                            'basic_structure' => '<div class="card">
    <div class="card-header">
        <h6 class="card-title mb-0">[Form Title]</h6>
        <small class="text-muted">[Optional description]</small>
    </div>
    <div class="card-body">
        <form method="post" action="[action]">
            <!-- Form buttons at top -->
            <div class="d-flex gap-2 pb-3 border-bottom mb-3">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save me-1"></i>[Action] [Entity]
                </button>
                <a href="[list-page]" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Cancel
                </a>
            </div>
            
            <!-- Fieldsets for logical grouping -->
            <fieldset class="mb-4">
                <legend class="h6 text-primary border-bottom pb-1">[Section Name]</legend>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="field1" class="form-label">Field Label <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="field1" name="field1" required aria-describedby="field1Help">
                            <div class="form-text" id="field1Help">Helper text if needed</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="field2" class="form-label">Another Field</label>
                            <select class="form-select" id="field2" name="field2">
                                <option value="">Choose...</option>
                            </select>
                        </div>
                    </div>
                </div>
            </fieldset>
            
            <!-- Repeat form buttons at bottom for long forms -->
            <div class="d-flex gap-2 pt-3 border-top mt-4">
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save me-1"></i>[Action] [Entity]
                </button>
                <a href="[list-page]" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Cancel
                </a>
            </div>
        </form>
    </div>
</div>',
                            'reference_implementations' => [
                                'poll.php' => 'Complete example with fieldsets, multiselect, and dynamic elements',
                                'account.php' => 'Standard account forms with proper validation',
                                'add_post.php' => 'Blog post creation form with rich content areas'
                            ]
                        ],
                        'required_bootstrap_classes' => [
                            'form_groups' => '.mb-3 for field spacing',
                            'labels' => '.form-label with required indicators (* in red)',
                            'inputs' => '.form-control for text/email/password inputs',
                            'selects' => '.form-select for dropdown menus',
                            'textareas' => '.form-control for textarea elements',
                            'validation' => '.is-invalid/.is-valid with .invalid-feedback/.valid-feedback',
                            'helper_text' => '.form-text for additional field guidance',
                            'required_indicators' => '<span class="text-danger">*</span> for required fields'
                        ],
                        'fieldset_standards' => [
                            'purpose' => 'Group logically related fields for better UX and accessibility',
                            'legend_styling' => 'Use .h6 .text-primary .border-bottom .pb-1 for consistent legend appearance',
                            'spacing' => 'Use .mb-4 on fieldset elements for proper section separation',
                            'examples' => [
                                'basic_info' => 'Name, title, description fields',
                                'settings' => 'Configuration options and preferences',
                                'media' => 'File uploads and image selections',
                                'advanced' => 'Technical or optional configuration'
                            ]
                        ],
                        'button_standardization' => [
                            'placement' => 'Always at top of form inside form tag. For longer forms, also at bottom',
                            'wrapper_classes' => 'd-flex gap-2 pb-3 border-bottom mb-3 (top) and d-flex gap-2 pt-3 border-top mt-4 (bottom)',
                            'primary_action' => 'btn btn-success with save icon for submit actions',
                            'secondary_action' => 'btn btn-outline-secondary with arrow-left icon for cancel/back',
                            'icon_spacing' => 'Use me-1 class for proper spacing between icons and text',
                            'consistent_text' => 'Use format: [Action] [Entity] (e.g., "Save Poll", "Create Account", "Update Settings")'
                        ],
                        'accessibility_requirements' => [
                            'form_labels' => 'Every form control must have associated label with proper for/id relationship',
                            'aria_describedby' => 'Use aria-describedby to link help text with form controls',
                            'fieldset_legends' => 'Fieldsets must have descriptive legends for screen readers',
                            'required_indication' => 'Both visual (*) and aria-required="true" for required fields',
                            'error_messaging' => 'Clear, descriptive error messages linked to form controls'
                        ],
                        'review_system_specific' => [
                            'star_rating_display' => [
                                'icon_classes' => 'Use FontAwesome 5.x: <i class="fas fa-star star"></i> for filled stars',
                                'empty_stars' => 'Use <i class="fas fa-star star-alt"></i> for empty stars',
                                'never_use' => 'NEVER use fa-solid (FontAwesome 6.x) - causes square placeholders',
                                'wrapper' => 'Wrap in <span class="rating" title="X stars"> for accessibility',
                                'column_alignment' => 'Rating column must be center-aligned in tables'
                            ],
                            'avatar_display' => [
                                'avatar_column' => 'Separate Avatar column with center alignment',
                                'name_column' => 'Separate Name column with left alignment and email underneath',
                                'avatar_styling' => 'Use 45px circle with colored background and white initial',
                                'never_combine' => 'Never combine avatar and name in single column'
                            ],
                            'date_formatting' => [
                                'table_dates' => 'Use m/d/Y format for tables to save width (not "F j, Y H:ia")',
                                'full_dates' => 'Use full format only in detailed views or forms'
                            ],
                            'status_display' => [
                                'approved_status' => 'Use .green class for "Approved"',
                                'pending_status' => 'Use .grey class for "Pending"',
                                'rejected_status' => 'Use .red class for "Disapproved"',
                                'column_alignment' => 'Status column must be center-aligned'
                            ]
                        ],
                        'responsive_design' => [
                            'grid_system' => 'Use Bootstrap row/col classes for proper responsive layout',
                            'mobile_optimization' => 'Single column on mobile, multi-column on larger screens',
                            'typical_layout' => 'col-md-6 for side-by-side fields, col-12 for full-width elements',
                            'form_control_sizing' => 'Let Bootstrap handle responsive form control sizing'
                        ],
                        'special_form_elements' => [
                            'dynamic_fields' => 'Use proper Bootstrap input-group structure for add/remove functionality',
                            'multiselect' => 'Implement with Bootstrap badges and proper JavaScript integration',
                            'file_uploads' => 'Use .form-control class and provide clear upload instructions',
                            'rich_text' => 'Integrate WYSIWYG editors with Bootstrap form styling',
                            'date_pickers' => 'Ensure date inputs work with Bootstrap form classes'
                        ]
                    ],
                    'content_title_blocks' => [
                        'purpose' => 'Standardized page headers with icons, titles, and descriptions',
                        'requirement' => 'ALL admin pages must include this header block after template_admin_header()',
                        'CRITICAL_IMPLEMENTATION_WARNING' => 'THIS IS THE MOST COMMONLY MISSED REQUIREMENT - Every page needs content title block!',
                        'standard_structure' => [
                            'html_template' => '<div class="content-title" id="main-[page-identifier]" role="banner" aria-label="[Page Name] Header">
    <div class="title">
        <div class="icon">
            <!-- 18x18 Font Awesome SVG icon appropriate for the application -->
        </div>
        <div class="txt">
            <h2>[Page Title]</h2>
            <p>[Brief description of page purpose]</p>
        </div>
    </div>
</div>
<br>',
                            'placement' => 'Immediately after template_admin_header() call, before main content',
                            'icon_requirements' => 'Use 18x18 Font Awesome SVG icons (NOT <i> tags!) appropriate to application function',
                            'accessibility' => 'Include role="banner" and descriptive aria-label attributes',
                            'unique_ids' => 'Each page must have unique id (main-dashboard, main-poll-form, etc.)',
                            'SPACING_CRITICAL' => 'Must include <br> tag after content-title block for proper spacing'
                        ],
                        'mode_aware_implementation' => [
                            'multi_mode_pages' => 'Pages with Create/Edit/View modes should adapt content',
                            'dynamic_titles' => 'Use variables like <?=$page?> for mode-specific titles',
                            'conditional_descriptions' => 'Adapt descriptions based on page mode using ternary operators',
                            'example_implementation' => '<h2><?=$page?> Poll</h2>
<p><?=$page == \'Edit\' ? \'Modify poll settings and answer options.\' : \'Create a new poll with custom options and settings.\'?></p>'
                        ],
                        'icon_selection_guide' => [
                            'accounts_system' => 'Users icon (viewBox="0 0 640 512") - multiple people/accounts',
                            'polling_system' => 'Chart bars icon (viewBox="0 0 448 512") - data visualization',
                            'blog_system' => 'Blog/newspaper icon (viewBox="0 0 512 512") - content publishing',
                            'ticket_system' => 'Ticket/tags icon (viewBox="0 0 512 512") - support/tracking',
                            'documents_system' => 'File/folder icon (viewBox="0 0 384 512") - document management',
                            'general_admin' => 'Cog/settings icon (viewBox="0 0 512 512") - administration'
                        ],
                        'implementation_checklist' => [
                            'header_added' => 'Content title block added after template_admin_header()',
                            'duplicate_h2_removed' => 'Remove any duplicate <h2> tags already in page content',
                            'spacing_correct' => 'Include <br> tag after content-title block for proper spacing',
                            'accessibility_complete' => 'All ARIA attributes and roles properly implemented',
                            'mode_awareness_tested' => 'For multi-mode pages, test all mode variations',
                            'icon_appropriate' => 'Icon selected is relevant to application function',
                            'no_syntax_errors' => 'Validate PHP syntax after implementation'
                        ]
                    ],
                    'search_filter_interface_standardization' => [
                        'purpose' => 'Standardized search and filter interface for all admin list pages',
                        'requirement' => 'ALL admin pages with data tables MUST implement this layout pattern',
                        'mandatory_implementation' => [
                            'layout_container' => 'Use .content-header responsive-flex-column pad-top-5 wrapper',
                            'button_alignment' => 'Dashboard/action buttons stay left-aligned in flex container',
                            'search_filter_alignment' => 'Search and filter controls right-justified on same line',
                            'dropdown_functionality' => 'Filters hidden by default, show on click with proper CSS/JS',
                            'active_filter_badges' => 'Show currently applied filters with X removal buttons',
                            'mobile_responsive' => 'Stack vertically on mobile, horizontal on desktop'
                        ],
                        'implementation_checklist' => [
                            'content_header_wrapper' => 'Page wrapped in proper .content-header container',
                            'button_section_added' => 'Action buttons in flex container with gap and margin styling',
                            'form_structure_correct' => 'Search/filter form with .filters and .search sections',
                            'css_targeting_works' => 'Verify main .content-header .filters .list CSS applies correctly',
                            'javascript_functional' => 'Filter dropdown shows/hides on click, closes on outside click',
                            'filter_badges_working' => 'Active filters display with functional removal links',
                            'visual_consistency' => 'Layout matches accounts.php reference implementation exactly',
                            'responsive_tested' => 'Test layout on mobile and desktop screen sizes'
                        ]
                    ]
                ]
            ]
        ]
    ],

    'phase_3_application_specific_integration' => [
        'title' => 'Application Type-Specific Integration',
        'reference_documents' => ['canonical-plan.php.bak', 'OrganizationPlan.php'],
        'application_types' => [
            'dashboard_applications' => [
                'characteristics' => 'Statistics widgets, data visualization, summary cards',
                'integration_requirements' => [
                    'widget_standardization' => 'Use consistent widget layout and styling',
                    'chart_integration' => 'Integrate with admin chart libraries (Chart.js)',
                    'stat_card_formatting' => 'Apply standard stat card structure - MANDATORY: Use classes .dashboard .content-block .stat with .data and .footer divs. NO inline styles - all formatting handled by admin.css',
                    'admin_stat_blocks' => 'For admin dashboard stat squares: Use .content-block.stat with color classes (green, cyan, red, blue). Content must use .data and .footer divs with center alignment and consistent margins (handled by CSS)',
                    'accessible_stat_blocks' => 'MANDATORY: Include role="status", aria-label, aria-live="polite", and <span class="sr-only"> for screen readers on all dashboard stat blocks',
                    'responsive_dashboard' => 'Ensure dashboard works on all screen sizes'
                ]
            ],
            'form_heavy_applications' => [
                'characteristics' => 'Complex forms, multi-step processes, validation',
                'integration_requirements' => [
                    'form_validation' => 'Use consistent validation patterns and styling',
                    'multi_step_forms' => 'Implement standard wizard/stepper component',
                    'file_upload_handling' => 'Use standard file upload components',
                    'ajax_form_submission' => 'Implement consistent AJAX handling patterns'
                ]
            ],
            'table_heavy_applications' => [
                'characteristics' => 'Data listing, sorting, filtering, pagination',
                'integration_requirements' => [
                    'canonical_table_structure' => 'Apply standard table format with actions dropdown',
                    'search_filter_layout' => 'MANDATORY: Implement standardized search/filter interface with proper button/search alignment',
                    'sorting_implementation' => 'Use consistent sorting icons and functionality',
                    'pagination_standardization' => 'Implement standard pagination component',
                    'filtering_interface' => 'Use consistent filter layout and styling',
                    'bulk_actions' => 'Implement standard bulk action patterns'
                ]
            ],
            'communication_applications' => [
                'characteristics' => 'Messaging, comments, notifications, email',
                'integration_requirements' => [
                    'message_threading' => 'Use consistent message display patterns',
                    'notification_system' => 'Integrate with admin notification framework',
                    'rich_text_editing' => 'Use standard Summernote integration',
                    'attachment_handling' => 'Implement standard file attachment display'
                ]
            ]
        ]
    ],

    'phase_4_database_integration' => [
        'title' => 'Database Integration and Optimization',
        'reference_document' => 'OrganizationPlan.php',
        'steps' => [
            '1_table_structure_review' => [
                'action' => 'Review and optimize table structure',
                'requirements' => [
                    'naming_conventions' => 'Ensure all tables follow {appname}_{table} pattern',
                    'index_optimization' => 'Add appropriate indexes for performance',
                    'foreign_key_constraints' => 'Implement proper referential integrity',
                    'data_types' => 'Optimize data types for storage and performance'
                ]
            ],
            '2_query_optimization' => [
                'action' => 'Optimize database queries for admin environment',
                'optimization_targets' => [
                    'prepared_statements' => 'Ensure all queries use prepared statements',
                    'join_optimization' => 'Optimize complex joins for better performance',
                    'pagination_queries' => 'Implement efficient pagination patterns',
                    'search_functionality' => 'Optimize search queries with proper indexing'
                ]
            ],
            '3_data_migration' => [
                'action' => 'Handle any required data migration',
                'migration_considerations' => [
                    'table_renames' => 'If table names need updating for best practices',
                    'data_integrity' => 'Ensure no data loss during migration',
                    'rollback_plan' => 'Prepare rollback procedures for data changes',
                    'testing_verification' => 'Thoroughly test all data operations'
                ]
            ]
        ]
    ],

    'phase_5_testing_and_verification' => [
        'title' => 'Comprehensive Testing and Quality Assurance',
        'steps' => [
            '1_functionality_testing' => [
                'action' => 'Test all application functionality in admin environment',
                'test_categories' => [
                    'core_functionality' => 'All primary features work as expected',
                    'admin_integration' => 'Navigation, authentication, and permissions work',
                    'responsive_design' => 'All screens work on mobile and desktop',
                    'browser_compatibility' => 'Test across major browsers',
                    'performance_testing' => 'Ensure acceptable load times'
                ]
            ],
            '2_existing_system_verification' => [
                'action' => 'Verify no impact on existing admin functionality',
                'verification_requirements' => [
                    'accounts_system' => 'All account management features work unchanged',
                    'blog_system' => 'All blog admin features work unchanged',
                    'dashboard' => 'Main admin dashboard works unchanged',
                    'navigation' => 'Admin navigation works with new application added',
                    'authentication' => 'Login/logout and permissions work unchanged'
                ]
            ],
            '3_security_verification' => [
                'action' => 'Verify security standards are maintained',
                'security_checks' => [
                    'authentication_checks' => 'Verify proper admin authentication on all pages',
                    'input_validation' => 'Ensure all inputs are properly validated and sanitized',
                    'sql_injection_prevention' => 'Verify all queries use prepared statements',
                    'xss_prevention' => 'Ensure all output is properly escaped',
                    'csrf_protection' => 'Implement CSRF protection on forms where needed'
                ]
            ]
        ]
    ],

    'phase_6_documentation_and_deployment' => [
        'title' => 'Documentation and Production Readiness',
        'steps' => [
            '1_integration_documentation' => [
                'action' => 'Document the integration for future reference',
                'documentation_requirements' => [
                    'integration_summary' => 'Overview of what was integrated and how',
                    'file_changes' => 'List of all files modified or added',
                    'database_changes' => 'Document any database schema changes',
                    'configuration_updates' => 'Any configuration changes made',
                    'troubleshooting_guide' => 'Common issues and solutions'
                ]
            ],
            '2_deployment_preparation' => [
                'action' => 'Prepare for production deployment',
                'deployment_checklist' => [
                    'asset_optimization' => [
                        'title' => 'CSS/JS Optimization and Redundancy Elimination',
                        'purpose' => 'Remove redundancy with central admin template while preserving unique functionality',
                        '📊_EXPECTED_RESULTS' => 'Typically achieve 50-90% file size reduction (Invoice system: 83% CSS reduction, 33% JS reduction)',
                        'process_steps' => [
                            'step_1_analyze_redundancy' => [
                                'action' => 'Identify redundant CSS/JS with central admin template',
                                'method' => 'Compare application CSS/JS with centralized admin template assets',
                                'tools' => 'Use grep_search to find overlapping styles and functions',
                                'common_redundancies' => [
                                    'global_resets' => '*, html, body global style overrides',
                                    'bootstrap_overrides' => 'Duplicate .table, .btn, .card, .form-control styles',
                                    'admin_layout' => 'header, aside, main, footer layout styles',
                                    'sidebar_functionality' => 'Responsive toggle, menu collapse JavaScript',
                                    'dropdown_components' => 'Generic dropdown menu styling and behavior',
                                    'tab_functionality' => 'Tab switching and content display JavaScript',
                                    'pagination_styling' => 'Standard pagination component styles'
                                ],
                                'example' => 'grep_search for common Bootstrap classes, utility functions, standard UI components'
                            ],
                            'step_2_extract_unique_functionality' => [
                                'action' => 'Extract only application-specific CSS/JS',
                                '🚨_CRITICAL_PRESERVATION_CHECK' => 'BEFORE optimization, verify all form, table, and button styling works!',
                                'unique_css_categories' => [
                                    'application_specific_forms' => '.create-[app]-modal, .manage-[app]-table, application form validation',
                                    'custom_status_badges' => 'Application-specific .green, .red, .blue status indicators',
                                    'data_visualization' => 'Charts, progress bars, data displays unique to app',
                                    'file_upload_styling' => 'Custom file input styling and upload interfaces',
                                    'dynamic_form_elements' => 'Add/remove fields, dynamic form behavior',
                                    'multiselect_components' => 'Custom multiselect dropdowns with search functionality',
                                    'application_specific_widgets' => 'Unique UI components not in central template'
                                ],
                                'unique_js_categories' => [
                                    'initialization_functions' => 'initMultiselect(), initManage[App]Items() type functions',
                                    'modal_system' => 'Application-specific modal dialogs and interactions',
                                    'dynamic_form_functions' => 'Add/remove form fields, form manipulation',
                                    'ajax_interactions' => 'Application-specific AJAX calls and responses',
                                    'data_visualization' => 'Custom charts, graphs, progress displays',
                                    'file_handling' => 'Upload progress, file validation, drag-drop functionality',
                                    'application_logic' => 'Business logic specific to the application'
                                ]
                            ],
                            'step_3_create_streamlined_assets' => [
                                'action' => 'Create application-specific.css and application-specific.js',
                                'naming_convention' => 'Keep as admin.css and admin.js in application directory (for existing includes)',
                                'file_header_template' => '/* [App] System - Specific Styles Only\n * Global styles handled by /admin/assets/css/admin.css\n */',
                                'size_target' => 'Aim for 50-90% reduction from original bloated files',
                                'content_focus' => 'Only include styles/functions that cannot be handled by central template',
                                'validation_steps' => [
                                    'syntax_check' => 'Verify no syntax errors using get_errors tool',
                                    'size_comparison' => 'Compare file sizes before/after optimization',
                                    'functionality_test' => 'Test all forms, modals, and dynamic elements'
                                ]
                            ],
                            'step_4_remove_global_overrides' => [
                                'action' => 'Eliminate all global style and script overrides',
                                '🚨_CRITICAL_REMOVAL_TARGETS' => 'These MUST be removed to prevent conflicts:',
                                'css_removals' => [
                                    'universal_selectors' => '*, html, body { } - causes layout conflicts',
                                    'layout_overrides' => 'header, aside, main, footer - breaks admin template',
                                    'bootstrap_overrides' => '.table, .btn, .card, .form-control - prevents canonical styling',
                                    'typography_resets' => 'h1, h2, h3, h4, h5 - interferes with Bootstrap typography',
                                    'responsive_overrides' => '@media queries that conflict with Bootstrap grid'
                                ],
                                'js_removals' => [
                                    'sidebar_management' => 'Responsive toggle, menu state management',
                                    'dropdown_handlers' => 'Generic dropdown show/hide functionality',
                                    'tab_switching' => 'Standard tab content display logic',
                                    'filter_toggles' => 'Generic filter panel show/hide',
                                    'global_event_listeners' => 'Document-level click handlers for common elements'
                                ]
                            ],
                            'step_5_backup_and_cleanup' => [
                                'action' => 'Safely backup original files and clean directory',
                                '🚨_BEFORE_CLEANUP_VERIFICATION' => 'TEST ALL FUNCTIONALITY BEFORE REMOVING ORIGINAL FILES!',
                                'mandatory_verification_steps' => [
                                    'form_functionality_test' => 'Test every form - verify styling, validation, and submit functionality',
                                    'table_functionality_test' => 'Test every table - verify sorting, pagination, filters work and look correct',
                                    'button_functionality_test' => 'Test every button type - verify styling and click behavior',
                                    'modal_functionality_test' => 'Test any modal dialogs or pop-ups',
                                    'responsive_test' => 'Test on mobile and desktop to ensure responsive behavior'
                                ],
                                'backup_process' => 'Only backup after successful verification',
                                'commands' => [
                                    'backup_css' => 'rename admin.css admin.css.backup (ONLY after functionality verified)',
                                    'backup_js' => 'rename admin.js admin.js.backup (ONLY after functionality verified)'
                                ],
                                'rollback_plan' => 'If any functionality is broken, restore from backup and re-analyze required styles'
                            ],
                            'step_6_document_optimization' => [
                                'action' => 'Document the optimization results',
                            'step_6_document_optimization' => [
                                'action' => 'Document the optimization results',
                                'metrics_to_track' => [
                                    'original_size' => 'Total lines and bytes of original CSS/JS files',
                                    'streamlined_size' => 'Total lines and bytes of optimized CSS/JS files',
                                    'reduction_percentage' => 'Calculate percentage reduction achieved',
                                    'functionality_preserved' => 'List all functionality that was preserved',
                                    'redundancies_removed' => 'List all global overrides that were removed'
                                ],
                                'success_criteria' => [
                                    'no_visual_regression' => 'All forms, tables, buttons look identical to before optimization',
                                    'no_functional_regression' => 'All dynamic functionality works identically',
                                    'style_inheritance' => 'Tables now properly inherit Bootstrap styling like accounts system',
                                    'performance_improvement' => 'Page load time should be faster due to smaller assets'
                                ]
                            ]
                        ],
                        '✅_OPTIMIZATION_COMPLETION_CHECKLIST' => [
                            'css_optimized' => 'Only application-specific CSS remains, global overrides removed',
                            'js_optimized' => 'Only application-specific JavaScript remains, global duplicates removed',
                            'scss_removed' => 'Remove any .scss source files to prevent regeneration of global overrides',
                            'functionality_verified' => 'All forms, tables, modals, and buttons tested and working',
                            'canonical_styling' => 'Tables and components now match accounts system appearance',
                            'documentation_updated' => 'Optimization results documented with before/after metrics'
                        ],
                        '📊_REAL_WORLD_EXAMPLE_RESULTS' => [
                            'invoice_system_optimization' => [
                                'original' => '2,267 lines CSS + 355 lines JS = 2,622 total lines',
                                'optimized' => '357 lines CSS + 221 lines JS = 578 total lines', 
                                'reduction' => '78% total reduction (2,044 lines removed)',
                                'file_sizes' => 'CSS: 48KB→8KB (83% reduction), JS: 17KB→12KB (33% reduction)',
                                'preserved_features' => 'Invoice creation modals, multiselect functionality, status badges, dynamic form items'
                            ],
                            'polling_system_example' => [
                                'original' => '2,428 lines (admin.css: 2,174 + admin.js: 254)',
                                'optimized' => '251 lines (polling-specific.css: 147 + polling-specific.js: 104)',
                                'reduction' => '90% reduction (2,177 lines removed)',
                                'preserved_features' => 'Add Option functionality, modal dialogs, poll results visualization, file upload styling'
                            ]
                        ]
                    ],
                    'step_7_EMERGENCY_RESTORATION' => [
                                '🚨_IF_FUNCTIONALITY_MISSING' => 'Use this step if forms, tables, or buttons are not working properly',
                                'action' => 'Restore essential styling from backup files',
                                'diagnosis_steps' => [
                                    'identify_missing_functionality' => 'Document exactly what is not working (forms, tables, buttons, etc.)',
                                    'compare_with_backup' => 'Use grep_search to find relevant styles in .backup files',
                                    'extract_essential_styles' => 'Copy only the essential styles needed for functionality'
                                ],
                                'restoration_process' => [
                                    'create_essential_css' => 'Create [app]-essential.css with ONLY the styles needed for basic functionality',
                                    'include_essential_css' => 'Add <link> tag for essential CSS in template',
                                    'test_functionality' => 'Verify all basic functionality works',
                                    'document_essential_styles' => 'Document which styles were essential and why'
                                ],
                                'prevention_for_future' => 'Update this checklist based on what was missed during optimization'
                            ]
                        ],
                        'success_criteria' => [
                            'reduction_achieved' => 'Minimum 80% reduction in CSS/JS file size',
                            'functionality_preserved' => 'All application features working correctly',
                            'no_conflicts' => 'No conflicts with central admin template',
                            'performance_improved' => 'Faster page load times',
                            'maintainability_improved' => 'Clear separation of application-specific code'
                        ],
                        'example_results' => [
                            'polling_system' => [
                                'original' => '2,428 lines (admin.css: 2,174 + admin.js: 254)',
                                'optimized' => '251 lines (polling-specific.css: 147 + polling-specific.js: 104)',
                                'reduction' => '90% reduction (2,177 lines removed)',
                                'preserved_features' => 'Add Option functionality, modal dialogs, poll results visualization, file upload styling'
                            ]
                        ]
                    ]
                ],
                'cache_considerations' => 'Clear any caches that might affect deployment',
                'database_migration_scripts' => 'Prepare any database migration scripts',
                'rollback_procedures' => 'Document exact rollback steps',
                'monitoring_setup' => 'Set up monitoring for the new application'
                ]
            ],
            '3_knowledge_transfer' => [
                'action' => 'Ensure team can maintain the integrated application',
                'knowledge_transfer_items' => [
                    'admin_user_guide' => 'How to use the application in admin interface',
                    'developer_guide' => 'How the integration works technically',
                    'maintenance_procedures' => 'Regular maintenance and updates needed',
                    'troubleshooting_guide' => 'How to diagnose and fix common issues'
                ]
            ]
        ]
    ]
];

// ============================================================================
// INTEGRATION SAFETY PROTOCOLS
// ============================================================================

$integration_safety_protocols = [
    'mandatory_safety_checks' => [
        'before_every_step' => [
            'backup_verification' => 'Confirm current backup is available and tested',
            'context_impact_check' => 'Verify change will not affect other contexts',
            'rollback_readiness' => 'Ensure quick rollback is possible'
        ],
        'after_every_step' => [
            'functionality_verification' => 'Test that existing functionality still works',
            'error_log_check' => 'Check for any new errors in logs',
            'performance_check' => 'Verify no significant performance degradation'
        ]
    ],

    'emergency_procedures' => [
        'if_something_breaks' => [
            'immediate_action' => 'STOP all further changes immediately',
            'rollback_procedure' => 'Restore from last known good backup',
            'impact_assessment' => 'Determine what broke and why',
            'corrective_planning' => 'Plan how to achieve integration without breaking existing functionality'
        ]
    ],

    'success_criteria' => [
        'integration_complete_when' => [
            'new_app_fully_functional' => 'All application features work in admin environment',
            'existing_systems_unchanged' => 'All existing admin functionality works identically',
            'styling_consistent' => 'Application follows all admin styling standards',
            'performance_maintained' => 'No significant performance degradation',
            'security_standards_met' => 'All security requirements are satisfied',
            'documentation_complete' => 'Integration is fully documented for future maintenance'
        ]
    ]
];

// ============================================================================
// QUICK REFERENCE GUIDE FOR AI
// ============================================================================

$ai_quick_reference = [
    'when_starting_integration' => [
        'step_1' => 'Read this entire checklist',
        'step_2' => 'Review OrganizationPlan.php for system-wide context',
        'step_3' => 'Review canonical-plan.php.bak for technical standards',
        'step_4' => 'Follow phases 0-6 in order, never skip steps',
        'step_5' => 'Test thoroughly after each phase'
    ],

    'common_integration_patterns' => [
        'simple_crud_app' => 'Focus on table standardization and form integration',
        'dashboard_app' => 'Focus on widget layout and responsive design',
        'communication_app' => 'Focus on message threading and rich text integration',
        'reporting_app' => 'Focus on chart integration and export functionality'
    ],

    'navigation_verification_checklist' => [
        'title' => 'Navigation Integration Verification',
        'purpose' => 'Ensure template_admin_header() parameters match navigation menu structure',
        'verification_steps' => [
            '1_parameter_format_check' => [
                'two_parameter_pages' => [
                    'format' => 'template_admin_header("Page Title", "main_section")',
                    'usage' => 'For pages that should highlight main menu item only',
                    'example' => 'template_admin_header("Dashboard", "tickets")'
                ],
                'three_parameter_pages' => [
                    'format' => 'template_admin_header("Page Title", "main_section", "sub_section")',
                    'usage' => 'For pages that should highlight both main and sub-menu items',
                    'example' => 'template_admin_header("View Tickets", "tickets", "view")'
                ]
            ],
            '2_navigation_menu_mapping' => [
                'main_menu_items' => 'Check main.php for $selected values (accounts, tickets, blog, etc.)',
                'sub_menu_items' => 'Check main.php for $selected_child values (view, manage, transfer, category, etc.)',
                'conditional_logic' => 'Verify ($selected == "X" && $selected_child == "Y") matches header parameters'
            ],
            '3_page_by_page_verification' => [
                'test_procedure' => [
                    'load_each_page' => 'Navigate to each application page',
                    'check_highlighting' => 'Verify correct menu item is highlighted',
                    'check_breadcrumbs' => 'Verify breadcrumb navigation is correct',
                    'document_issues' => 'Note any mismatched highlighting for correction'
                ]
            ]
        ],
        'common_navigation_patterns' => [
            'list_pages' => [
                'pattern' => 'template_admin_header("Items", "app_name", "view")',
                'examples' => ['tickets.php', 'categories.php', 'accounts.php']
            ],
            'create_edit_pages' => [
                'pattern' => 'template_admin_header("Create/Edit Item", "app_name", "manage")',
                'examples' => ['ticket.php', 'category.php', 'account.php']
            ],
            'import_export_pages' => [
                'pattern' => 'template_admin_header("Import/Export", "app_name", "transfer")',
                'examples' => ['tickets_import.php', 'accounts_import.php']
            ],
            'dashboard_pages' => [
                'pattern' => 'template_admin_header("Dashboard", "app_name")',
                'examples' => ['index.php', 'dashboard.php']
            ]
        ]
    ],

    'red_flags_to_avoid' => [
        'never_modify_existing_admin_files' => 'Always add new files, never change existing ones',
        'never_override_bootstrap_classes' => 'Use namespaced classes for customizations',
        'never_break_existing_includes' => 'Add to includes, don\'t replace them',
        'never_skip_testing' => 'Test existing functionality after every change',
        'never_ignore_other_contexts' => 'Always consider impact on client_portal, public, etc.'
    ]
];

echo "Master Integration Checklist loaded successfully.\n";
echo "Use this checklist as the primary guide for all application integrations.\n";
echo "Reference OrganizationPlan.php and canonical-plan.php.bak as needed for each phase.\n";

// ============================================================================
// INTEGRATION COMPLETION STATUS
// ============================================================================

$integration_status = [
    'current_application' => 'Review System',
    'status' => 'In Progress - UI Refinements Complete',
    'last_updated' => 'December 17, 2024',
    
    'completed_phases' => [
        'phase_0_preparation' => 'completed',
        'phase_1_system_analysis' => 'completed',
        'phase_2_technical_integration' => 'completed',
        'phase_3_application_specific' => 'completed',
        'phase_4_database_integration' => 'completed',
        'phase_5_testing_verification' => 'completed'
    ],
    
    'review_system_specific_standards' => [
        'table_formatting' => [
            'avatar_display' => 'Use getUserAvatar() function with account array structure: ["avatar" => "", "role" => "Member"]',
            'sorting_arrows' => 'Use $table_icons from main.php (FontAwesome SVG icons) for consistent appearance',
            'star_ratings' => 'Display with filled/empty stars using max_stars constant and fas fa-star classes',
            'expand_functionality' => 'Conditional expand for content longer than 150 characters with proper JavaScript toggle',
            'date_formatting' => 'Use m/d/Y format for consistent date display across admin interface',
            'dropdown_actions' => 'Implement dropdown actions menu matching accounts.php canonical pattern'
        ],
        'constants_required' => [
            'max_stars' => 'Define as 5 for star rating display calculations',
            'usage' => 'Used in PHP calculations for empty stars: max_stars - $review["rating"]'
        ],
        'ui_improvements_implemented' => [
            'content_preview' => 'Show truncated content with "Show More" button only when needed (>150 chars)',
            'avatar_standardization' => 'Replaced color_from_string with getUserAvatar() for consistency',
            'button_styling' => 'Use btn btn-sm btn-outline-secondary for expand buttons',
            'spacing_optimization' => 'Added proper Bootstrap classes (.mt-1, .mt-2, .me-1) for spacing'
        ]
    ],
    
    'issues_encountered' => [
        'max_stars_constant' => [
            'description' => 'Fatal error: Undefined constant "max_stars" in review listings',
            'resolution' => 'Added conditional definition: if (!defined("max_stars")) { define("max_stars", 5); }',
            'status' => 'resolved'
        ],
        'avatar_function_parameters' => [
            'description' => 'getUserAvatar() function signature mismatch - too many arguments provided',
            'resolution' => 'Corrected to use single parameter: getUserAvatar(["avatar" => "", "role" => "Member"])',
            'status' => 'resolved'
        ],
        'expand_functionality' => [
            'description' => 'Expand links showing on all rows regardless of content length causing page wiggling',
            'resolution' => 'Implemented conditional expand based on content length with proper JavaScript toggle',
            'status' => 'resolved'
        ],
        'table_structure_standardization' => [
            'description' => 'Table headers and actions not matching canonical accounts.php pattern',
            'resolution' => 'Implemented proper th elements, dropdown actions menu, separated avatar/name columns',
            'status' => 'resolved'
        ]
    ],
    
    'performance_notes' => [
        'template_integration' => 'Full admin template integration with unified main.php',
        'conditional_rendering' => 'Expand functionality only renders when content exceeds 150 characters',
        'avatar_optimization' => 'Uses getUserAvatar() function for consistent avatar generation across all systems',
        'javascript_efficiency' => 'Minimal JavaScript for expand/collapse without external dependencies'
    ],
    
    'next_integration_ready' => true
];

// Legacy Ticket System Integration Status (Completed)
$previous_integrations = [
    'ticket_system' => [
        'application' => 'Ticket System',
        'status' => 'Completed',
        'completion_date' => 'December 17, 2024',
        'key_achievements' => [
            'database_naming' => 'Implemented prefixed table naming convention (tickets_categories)',
            'ui_standardization' => 'Full canonical admin UI patterns implementation',
            'navigation_integration' => 'Real-time ticket count statistics integration'
        ]
    ]
];

echo "\n=== TICKET SYSTEM INTEGRATION COMPLETED ===\n";
echo "All phases completed successfully with issues resolved.\n";
echo "System ready for next application integration.\n";
?>